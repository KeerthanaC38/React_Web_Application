{"ast":null,"code":"export const initialLoginState = [];\nexport const LoginTypes = {\n  ADD_LOGIN: 'ADD_LOGIN',\n  CLEAR: 'CLEAR'\n};\nexport const loginReducer = (state = initialLoginState, action) => {\n  switch (action.type) {\n    case LoginTypes.ADD_LOGIN:\n      console.log(\"login\", action);\n      return [...state, action.loginDetails];\n    // Add a new login to the array\n\n    case LoginTypes.CLEAR:\n      return [];\n    // Clear the array of logins\n\n    default:\n      return state;\n    // Return the current state for unknown action types\n  }\n};\n\n// export const LoginTypes = {\n//     ADD_LOGIN: 'ADD_LOGIN',\n//     CLEAR: 'CLEAR',\n//   };\n\n// //   export const loginReducer = (state = initialLoginState, action) => {\n// //     switch (action.type) {\n// //       case LoginTypes.ADD_LOGIN:\n// //         console.log(\"login\", action);\n// //         const newLogin = Array.isArray(action.loginDetails) ? action.loginDetails : [action.loginDetails];\n// //         return [...state, ...newLogin]; // Add a new login to the array\n\n// //       case LoginTypes.CLEAR:\n// //         return []; // Clear the array of logins\n\n// //       default:\n// //         return state; // Return the current state for unknown action types\n// //     }\n// //   };\n\n// export const createLoginDetails = (loginDetails) => ({\n//     type: LoginTypes.ADD_LOGIN,\n//     ...loginDetails,\n//   });\n\n//   export const loginReducer = (state= initialLoginState, action) => {\n//     switch (action.type) {\n//       case LoginTypes.ADD_LOGIN:\n//         console.log(\"login details1111\",action);\n//         return [...state, action.loginDetails]; // Add a new login to the array\n\n//       case LoginTypes.CLEAR:\n//         return []; // Clear the array of logins\n\n//       default:\n//         return state; // Return the current state for unknown action types\n//     }\n//   };\n\n// // export const loginReducer = (state = initialLoginState, action) => {\n// //     switch (action.type) {\n// //       case LoginTypes.ADD_LOGIN:\n// //         console.log(\"login\", action);\n// //         const newLogin = Array.isArray(action.loginDetails) ? action.loginDetails : [action.loginDetails];\n// //         return [...state, ...newLogin]; // Add a new login to the array\n\n// //       case LoginTypes.CLEAR:\n// //         return []; // Clear the array of logins\n\n// //       default:\n// //         return Array.isArray(state) ? state : []; // Ensure that state is an iterable array\n// //     }\n// //   };","map":{"version":3,"names":["initialLoginState","LoginTypes","ADD_LOGIN","CLEAR","loginReducer","state","action","type","console","log","loginDetails"],"sources":["C:/CS 584 EWA/Assignment 5 React with Database/frontend/src/Reducer/loginReducer.js"],"sourcesContent":["export const initialLoginState = [];\r\n\r\nexport const LoginTypes = {\r\n    ADD_LOGIN: 'ADD_LOGIN',\r\n    CLEAR: 'CLEAR',\r\n  };\r\n  \r\n  export const loginReducer = (state= initialLoginState, action) => {\r\n    switch (action.type) {\r\n      case LoginTypes.ADD_LOGIN:\r\n        console.log(\"login\",action);\r\n        return [...state, action.loginDetails]; // Add a new login to the array\r\n  \r\n      case LoginTypes.CLEAR:\r\n        return []; // Clear the array of logins\r\n  \r\n      default:\r\n        return state; // Return the current state for unknown action types\r\n    }\r\n  };\r\n  \r\n// export const LoginTypes = {\r\n//     ADD_LOGIN: 'ADD_LOGIN',\r\n//     CLEAR: 'CLEAR',\r\n//   };\r\n\r\n// //   export const loginReducer = (state = initialLoginState, action) => {\r\n// //     switch (action.type) {\r\n// //       case LoginTypes.ADD_LOGIN:\r\n// //         console.log(\"login\", action);\r\n// //         const newLogin = Array.isArray(action.loginDetails) ? action.loginDetails : [action.loginDetails];\r\n// //         return [...state, ...newLogin]; // Add a new login to the array\r\n  \r\n// //       case LoginTypes.CLEAR:\r\n// //         return []; // Clear the array of logins\r\n  \r\n// //       default:\r\n// //         return state; // Return the current state for unknown action types\r\n// //     }\r\n// //   };\r\n  \r\n// export const createLoginDetails = (loginDetails) => ({\r\n//     type: LoginTypes.ADD_LOGIN,\r\n//     ...loginDetails,\r\n//   });\r\n  \r\n//   export const loginReducer = (state= initialLoginState, action) => {\r\n//     switch (action.type) {\r\n//       case LoginTypes.ADD_LOGIN:\r\n//         console.log(\"login details1111\",action);\r\n//         return [...state, action.loginDetails]; // Add a new login to the array\r\n  \r\n//       case LoginTypes.CLEAR:\r\n//         return []; // Clear the array of logins\r\n  \r\n//       default:\r\n//         return state; // Return the current state for unknown action types\r\n//     }\r\n//   };\r\n\r\n// // export const loginReducer = (state = initialLoginState, action) => {\r\n// //     switch (action.type) {\r\n// //       case LoginTypes.ADD_LOGIN:\r\n// //         console.log(\"login\", action);\r\n// //         const newLogin = Array.isArray(action.loginDetails) ? action.loginDetails : [action.loginDetails];\r\n// //         return [...state, ...newLogin]; // Add a new login to the array\r\n  \r\n// //       case LoginTypes.CLEAR:\r\n// //         return []; // Clear the array of logins\r\n  \r\n// //       default:\r\n// //         return Array.isArray(state) ? state : []; // Ensure that state is an iterable array\r\n// //     }\r\n// //   };\r\n  "],"mappings":"AAAA,OAAO,MAAMA,iBAAiB,GAAG,EAAE;AAEnC,OAAO,MAAMC,UAAU,GAAG;EACtBC,SAAS,EAAE,WAAW;EACtBC,KAAK,EAAE;AACT,CAAC;AAED,OAAO,MAAMC,YAAY,GAAGA,CAACC,KAAK,GAAEL,iBAAiB,EAAEM,MAAM,KAAK;EAChE,QAAQA,MAAM,CAACC,IAAI;IACjB,KAAKN,UAAU,CAACC,SAAS;MACvBM,OAAO,CAACC,GAAG,CAAC,OAAO,EAACH,MAAM,CAAC;MAC3B,OAAO,CAAC,GAAGD,KAAK,EAAEC,MAAM,CAACI,YAAY,CAAC;IAAE;;IAE1C,KAAKT,UAAU,CAACE,KAAK;MACnB,OAAO,EAAE;IAAE;;IAEb;MACE,OAAOE,KAAK;IAAE;EAClB;AACF,CAAC;;AAEH;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA"},"metadata":{},"sourceType":"module","externalDependencies":[]}