{"ast":null,"code":"export const initialCartState = []; // Define your initial state\n\nexport const CartTypes = {\n  ADD: 'ADD',\n  REMOVE: 'REMOVE',\n  CLEAR: 'CLEAR'\n};\nexport const findItem = (cart, id) => cart.find(item => item.id === id);\nexport const getTotalCartItems = cart => {\n  let totalItems = 0;\n  for (const cartItem of cart) {\n    totalItems += cartItem.quantity;\n  }\n  return totalItems;\n};\nexport const cartReducer = (state = initialCartState, action) => {\n  switch (action.type) {\n    case CartTypes.ADD:\n      if (findItem(state, action.id)) {\n        return state.map(item => item.id === action.id ? {\n          ...item,\n          quantity: item.quantity + 1\n        } : item);\n      }\n      return [...state, {\n        id: action.id,\n        quantity: 1\n      }];\n    case CartTypes.REMOVE:\n      return state.filter(item => item.id !== action.id);\n    case CartTypes.CLEAR:\n      return [];\n    // Return an empty array to clear the cart\n    default:\n      return state;\n    // Return the current state for unknown action types\n  }\n};","map":{"version":3,"names":["initialCartState","CartTypes","ADD","REMOVE","CLEAR","findItem","cart","id","find","item","getTotalCartItems","totalItems","cartItem","quantity","cartReducer","state","action","type","map","filter"],"sources":["C:/CS 584 EWA/Assignment 5 React with Database/frontend/src/Reducer/cartReducer.js"],"sourcesContent":["\r\n\r\nexport const initialCartState = []; // Define your initial state\r\n\r\nexport const CartTypes = {\r\n  ADD: 'ADD',\r\n  REMOVE: 'REMOVE',\r\n  CLEAR: 'CLEAR',\r\n};\r\n\r\nexport const findItem = (cart, id) => cart.find((item) => item.id === id);\r\n\r\nexport const getTotalCartItems = (cart) => {\r\n  let totalItems = 0;\r\n\r\n  for (const cartItem of cart) {\r\n    totalItems += cartItem.quantity;\r\n  }\r\n\r\n  return totalItems;\r\n};\r\n\r\nexport const cartReducer = (state = initialCartState, action) => {\r\n  switch (action.type) {\r\n    case CartTypes.ADD:\r\n      if (findItem(state, action.id)) {\r\n        return state.map((item) =>\r\n          item.id === action.id\r\n            ? { ...item, quantity: item.quantity + 1 }\r\n            : item\r\n        );\r\n      }\r\n      return [\r\n        ...state,\r\n        { id: action.id, quantity: 1 },\r\n      ];\r\n    case CartTypes.REMOVE:\r\n      return state.filter((item) => item.id !== action.id);\r\n      case CartTypes.CLEAR:\r\n        return []; // Return an empty array to clear the cart\r\n    default:\r\n      return state; // Return the current state for unknown action types\r\n  }\r\n};\r\n\r\n  "],"mappings":"AAEA,OAAO,MAAMA,gBAAgB,GAAG,EAAE,CAAC,CAAC;;AAEpC,OAAO,MAAMC,SAAS,GAAG;EACvBC,GAAG,EAAE,KAAK;EACVC,MAAM,EAAE,QAAQ;EAChBC,KAAK,EAAE;AACT,CAAC;AAED,OAAO,MAAMC,QAAQ,GAAGA,CAACC,IAAI,EAAEC,EAAE,KAAKD,IAAI,CAACE,IAAI,CAAEC,IAAI,IAAKA,IAAI,CAACF,EAAE,KAAKA,EAAE,CAAC;AAEzE,OAAO,MAAMG,iBAAiB,GAAIJ,IAAI,IAAK;EACzC,IAAIK,UAAU,GAAG,CAAC;EAElB,KAAK,MAAMC,QAAQ,IAAIN,IAAI,EAAE;IAC3BK,UAAU,IAAIC,QAAQ,CAACC,QAAQ;EACjC;EAEA,OAAOF,UAAU;AACnB,CAAC;AAED,OAAO,MAAMG,WAAW,GAAGA,CAACC,KAAK,GAAGf,gBAAgB,EAAEgB,MAAM,KAAK;EAC/D,QAAQA,MAAM,CAACC,IAAI;IACjB,KAAKhB,SAAS,CAACC,GAAG;MAChB,IAAIG,QAAQ,CAACU,KAAK,EAAEC,MAAM,CAACT,EAAE,CAAC,EAAE;QAC9B,OAAOQ,KAAK,CAACG,GAAG,CAAET,IAAI,IACpBA,IAAI,CAACF,EAAE,KAAKS,MAAM,CAACT,EAAE,GACjB;UAAE,GAAGE,IAAI;UAAEI,QAAQ,EAAEJ,IAAI,CAACI,QAAQ,GAAG;QAAE,CAAC,GACxCJ,IACN,CAAC;MACH;MACA,OAAO,CACL,GAAGM,KAAK,EACR;QAAER,EAAE,EAAES,MAAM,CAACT,EAAE;QAAEM,QAAQ,EAAE;MAAE,CAAC,CAC/B;IACH,KAAKZ,SAAS,CAACE,MAAM;MACnB,OAAOY,KAAK,CAACI,MAAM,CAAEV,IAAI,IAAKA,IAAI,CAACF,EAAE,KAAKS,MAAM,CAACT,EAAE,CAAC;IACpD,KAAKN,SAAS,CAACG,KAAK;MAClB,OAAO,EAAE;IAAE;IACf;MACE,OAAOW,KAAK;IAAE;EAClB;AACF,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}