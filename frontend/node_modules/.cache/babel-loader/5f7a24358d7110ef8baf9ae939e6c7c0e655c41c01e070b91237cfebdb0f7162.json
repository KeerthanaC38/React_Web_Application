{"ast":null,"code":"var _jsxFileName = \"C:\\\\CS 584 EWA\\\\Assignment 5 React with Database\\\\frontend\\\\src\\\\Pages\\\\LoginPage.js\",\n  _s = $RefreshSig$();\nimport React, { useContext, useState } from 'react';\nimport './Css/LoginPage.css';\nimport { connect, useDispatch } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { useNavigate } from 'react-router-dom';\nimport { ShopContext } from '../Context/ShopContext';\nimport { LoginTypes, createLoginDetails } from '../Reducer/loginReducer';\nimport { AuthTypes } from '../Reducer/authReducer';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst LoginPage = props => {\n  _s();\n  const [formData, setFormData] = useState({\n    username: '',\n    password: '',\n    usertype: 'customer' // Default usertype\n  });\n\n  const navigate = useNavigate();\n  const dispatch = useDispatch();\n  const {\n    all_product\n  } = useContext(ShopContext);\n  const [errorMessage, setErrorMessage] = useState(false);\n  const handleChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setFormData(prevData => ({\n      ...prevData,\n      [name]: value\n    }));\n  };\n  // const addProduct = (id, name, price, image, category, manufacturer, condition, discount, accessories = null) => {\n  //   const newProduct = {\n  //     id,\n  //     name,\n  //     price,\n  //     image,\n  //     category,\n  //     manufacturer,\n  //     condition,\n  //     discount,\n  //     accessories\n  //   };\n\n  //   all_product.push(newProduct);\n  // };\n\n  // // Example usage:\n  // addProduct(\n  //   \"New Product ID\",\n  //   \"New Product Name\",\n  //   99.99,\n  //   \"path/to/new_product_image.jpg\",\n  //   \"new_category\",\n  //   \"New Manufacturer\",\n  //   \"New Condition\",\n  //   20.0,\n  //   {\n  //     accessory: [\n  //       \"New Accessory 1\",\n  //       \"New Accessory 2\"\n  //     ]\n  //   }\n  // );\n\n  // Now the new product is added to the 'all_product' array.\n\n  const handleSubmit = async e => {\n    e.preventDefault();\n    const matchingRegistration = props.registration.find(reg => {\n      return reg.username === formData.username && reg.password === formData.password && reg.usertype.toLowerCase() === formData.usertype.toLowerCase();\n    });\n    const newLogin = {\n      username: formData.username,\n      password: formData.password,\n      usertype: formData.usertype\n    };\n    // dispatch(createLoginDetails({\n    //   username: formData.username,\n    //   password: formData.password,\n    //   usertype: formData.usertype,\n    // }));\n    try {\n      const response = await fetch('http://localhost:3001/login', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          username: formData.username,\n          password: formData.password,\n          usertype: formData.usertype\n        })\n      });\n      if (response.ok) {\n        // Registration successful\n        // Redirect or show success message\n        console.log('Login successful!');\n        dispatch({\n          type: LoginTypes.ADD_LOGIN,\n          loginDetails: newLogin\n        });\n        dispatch({\n          type: AuthTypes.LOGIN,\n          islogin: !props.islogin\n        });\n        // dispatch({type: LoginTypes.ADD_LOGIN,loginDetails: newLogin});\n        // dispatch({type: AuthTypes.LOGIN , islogin: !props.islogin});\n        // console.log(AuthTypes.LOGIN);\n        navigate('/');\n      } else {\n        // Handle registration failure\n        // Show error message or take appropriate action\n        setErrorMessage(true);\n        console.log('Login failed. Invalid credentials.');\n      }\n    } catch (error) {\n      console.log(\"signin\");\n      console.error('Error loging in user:', error);\n      // Handle error\n    }\n    //  if (matchingRegistration) {\n    //       console.log('Login successful!');\n    //       dispatch({type: LoginTypes.ADD_LOGIN,loginDetails: newLogin});\n    //       dispatch({type: AuthTypes.LOGIN , islogin: !props.islogin});\n    //       console.log(AuthTypes.LOGIN);\n    //       navigate('/');\n\n    //     } else {\n    //       setErrorMessage(true);\n    //       console.log('Login failed. Invalid credentials.');\n    //     }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"login-page\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"login-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Login\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 142,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleSubmit,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"login-field\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"username\",\n            children: \"Username:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 145,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            id: \"username\",\n            name: \"username\",\n            placeholder: \"Enter your username\",\n            value: formData.username,\n            onChange: handleChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 146,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 144,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"login-field\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"password\",\n            children: \"Password:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 156,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"password\",\n            id: \"password\",\n            name: \"password\",\n            placeholder: \"Enter your password\",\n            value: formData.password,\n            onChange: handleChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 157,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 155,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"login-field\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"usertype\",\n            children: \"UserType:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 167,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n            id: \"usertype\",\n            name: \"usertype\",\n            value: formData.usertype,\n            onChange: handleChange,\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"customer\",\n              children: \"Customer\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 174,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"retailer\",\n              children: \"Store Manager\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 175,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"manager\",\n              children: \"Salesman\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 176,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 168,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 166,\n          columnNumber: 11\n        }, this), errorMessage && /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"error-message\",\n          children: \"Login failed. Invalid credentials.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 179,\n          columnNumber: 28\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          children: \"Login\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 180,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 143,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 141,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 140,\n    columnNumber: 5\n  }, this);\n};\n\n// LoginPage.PropTypes = {\n//   registration: PropTypes.arrayOf(PropTypes.shape({\n//     userName: PropTypes.string.isRequired,\n//     password: PropTypes.string.isRequired,\n//     repassword: PropTypes.string.isRequired,\n//     userType: PropTypes.string.isRequired,\n//   })).isRequired,\n// };\n_s(LoginPage, \"kngZwNR10KaHaPiVnCJsgK6MTUU=\", false, function () {\n  return [useNavigate, useDispatch];\n});\n_c = LoginPage;\nconst mapStateToProps = state => {\n  console.log(\"mapstate \", state);\n  return {\n    registration: state.registration,\n    islogin: state.islogin\n  };\n};\nconst ConnectedLoginPage = connect(mapStateToProps)(LoginPage);\nexport default ConnectedLoginPage;\nvar _c;\n$RefreshReg$(_c, \"LoginPage\");","map":{"version":3,"names":["React","useContext","useState","connect","useDispatch","PropTypes","useNavigate","ShopContext","LoginTypes","createLoginDetails","AuthTypes","jsxDEV","_jsxDEV","LoginPage","props","_s","formData","setFormData","username","password","usertype","navigate","dispatch","all_product","errorMessage","setErrorMessage","handleChange","e","name","value","target","prevData","handleSubmit","preventDefault","matchingRegistration","registration","find","reg","toLowerCase","newLogin","response","fetch","method","headers","body","JSON","stringify","ok","console","log","type","ADD_LOGIN","loginDetails","LOGIN","islogin","error","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","htmlFor","id","placeholder","onChange","_c","mapStateToProps","state","ConnectedLoginPage","$RefreshReg$"],"sources":["C:/CS 584 EWA/Assignment 5 React with Database/frontend/src/Pages/LoginPage.js"],"sourcesContent":["import React, { useContext, useState } from 'react';\r\n\r\nimport './Css/LoginPage.css';\r\nimport { connect, useDispatch } from 'react-redux';\r\nimport PropTypes from 'prop-types';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport { ShopContext } from '../Context/ShopContext';\r\nimport { LoginTypes, createLoginDetails } from '../Reducer/loginReducer';\r\nimport { AuthTypes } from '../Reducer/authReducer';\r\n\r\nconst LoginPage = (props) => {\r\n  const [formData, setFormData] = useState({\r\n    username: '',\r\n    password: '',\r\n    usertype: 'customer', // Default usertype\r\n  });\r\n  const navigate  = useNavigate ();\r\n  const dispatch = useDispatch();\r\n  const{all_product}=useContext(ShopContext);\r\n  const [errorMessage,setErrorMessage]= useState(false);\r\n\r\n  const handleChange = (e) => {\r\n    const { name, value } = e.target;\r\n    setFormData((prevData) => ({\r\n      ...prevData,\r\n      [name]: value,\r\n    }));\r\n  };\r\n  // const addProduct = (id, name, price, image, category, manufacturer, condition, discount, accessories = null) => {\r\n  //   const newProduct = {\r\n  //     id,\r\n  //     name,\r\n  //     price,\r\n  //     image,\r\n  //     category,\r\n  //     manufacturer,\r\n  //     condition,\r\n  //     discount,\r\n  //     accessories\r\n  //   };\r\n  \r\n  //   all_product.push(newProduct);\r\n  // };\r\n  \r\n  // // Example usage:\r\n  // addProduct(\r\n  //   \"New Product ID\",\r\n  //   \"New Product Name\",\r\n  //   99.99,\r\n  //   \"path/to/new_product_image.jpg\",\r\n  //   \"new_category\",\r\n  //   \"New Manufacturer\",\r\n  //   \"New Condition\",\r\n  //   20.0,\r\n  //   {\r\n  //     accessory: [\r\n  //       \"New Accessory 1\",\r\n  //       \"New Accessory 2\"\r\n  //     ]\r\n  //   }\r\n  // );\r\n  \r\n  // Now the new product is added to the 'all_product' array.\r\n  \r\n\r\n  const handleSubmit = async (e) => {\r\n\r\n    e.preventDefault();\r\n\r\n    const matchingRegistration = props.registration.find(\r\n      (reg) => {\r\n        \r\n  \r\n        return (\r\n          reg.username === formData.username &&\r\n          reg.password === formData.password &&\r\n          reg.usertype.toLowerCase() === formData.usertype.toLowerCase()\r\n        );\r\n      }\r\n    );\r\n\r\n    const newLogin = {\r\n      username: formData.username,\r\n      password: formData.password,\r\n      usertype: formData.usertype,\r\n    };\r\n    // dispatch(createLoginDetails({\r\n    //   username: formData.username,\r\n    //   password: formData.password,\r\n    //   usertype: formData.usertype,\r\n    // }));\r\n    try {\r\n      const response = await fetch('http://localhost:3001/login', {\r\n        method: 'POST',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n        },\r\n        body: JSON.stringify({\r\n          username: formData.username,\r\n          password: formData.password,\r\n          usertype: formData.usertype,\r\n        }),\r\n      });\r\n\r\n      if (response.ok) {\r\n        // Registration successful\r\n        // Redirect or show success message\r\n        console.log('Login successful!');\r\n        dispatch({type: LoginTypes.ADD_LOGIN,loginDetails: newLogin});\r\n      dispatch({type: AuthTypes.LOGIN , islogin: !props.islogin});\r\n      // dispatch({type: LoginTypes.ADD_LOGIN,loginDetails: newLogin});\r\n      // dispatch({type: AuthTypes.LOGIN , islogin: !props.islogin});\r\n      // console.log(AuthTypes.LOGIN);\r\n        navigate('/');\r\n      } else {\r\n        // Handle registration failure\r\n        // Show error message or take appropriate action\r\n        setErrorMessage(true);\r\n      console.log('Login failed. Invalid credentials.');\r\n      }\r\n    } catch (error) {\r\n      console.log(\"signin\");\r\n      console.error('Error loging in user:', error);\r\n      // Handle error\r\n    }\r\n//  if (matchingRegistration) {\r\n//       console.log('Login successful!');\r\n//       dispatch({type: LoginTypes.ADD_LOGIN,loginDetails: newLogin});\r\n//       dispatch({type: AuthTypes.LOGIN , islogin: !props.islogin});\r\n//       console.log(AuthTypes.LOGIN);\r\n//       navigate('/');\r\n  \r\n//     } else {\r\n//       setErrorMessage(true);\r\n//       console.log('Login failed. Invalid credentials.');\r\n//     }\r\n  };\r\n\r\n  return (\r\n    <div className='login-page'>\r\n      <div className='login-container'>\r\n        <h1>Login</h1>\r\n        <form onSubmit={handleSubmit}>\r\n          <div className='login-field'>\r\n            <label htmlFor='username'>Username:</label>\r\n            <input\r\n              type='text'\r\n              id='username'\r\n              name='username'\r\n              placeholder='Enter your username'\r\n              value={formData.username}\r\n              onChange={handleChange}\r\n            />\r\n          </div>\r\n          <div className='login-field'>\r\n            <label htmlFor='password'>Password:</label>\r\n            <input\r\n              type='password'\r\n              id='password'\r\n              name='password'\r\n              placeholder='Enter your password'\r\n              value={formData.password}\r\n              onChange={handleChange}\r\n            />\r\n          </div>\r\n          <div className='login-field'>\r\n            <label htmlFor='usertype'>UserType:</label>\r\n            <select\r\n              id='usertype'\r\n              name='usertype'\r\n              value={formData.usertype}\r\n              onChange={handleChange}\r\n            >\r\n              <option value='customer'>Customer</option>\r\n              <option value='retailer'>Store Manager</option>\r\n              <option value='manager'>Salesman</option>\r\n            </select>\r\n          </div>\r\n          {errorMessage && <p className=\"error-message\">Login failed. Invalid credentials.</p>}\r\n          <button type='submit'>Login</button>\r\n        </form>\r\n        {/* <p className='login-signup'>\r\n          Don't have an account? <span>Sign up here</span>\r\n        </p> */}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\n// LoginPage.PropTypes = {\r\n//   registration: PropTypes.arrayOf(PropTypes.shape({\r\n//     userName: PropTypes.string.isRequired,\r\n//     password: PropTypes.string.isRequired,\r\n//     repassword: PropTypes.string.isRequired,\r\n//     userType: PropTypes.string.isRequired,\r\n//   })).isRequired,\r\n// };\r\n\r\nconst mapStateToProps = (state) => {\r\n  console.log(\"mapstate \", state);\r\n  return {\r\n    registration : state.registration,\r\n    islogin: state.islogin,\r\n  };\r\n};\r\n\r\nconst ConnectedLoginPage = connect(mapStateToProps)(LoginPage);\r\n\r\nexport default ConnectedLoginPage;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}