[{"C:\\CS 584 EWA\\Assignment 5 React with Database\\frontend\\src\\index.js":"1","C:\\CS 584 EWA\\Assignment 5 React with Database\\frontend\\src\\reportWebVitals.js":"2","C:\\CS 584 EWA\\Assignment 5 React with Database\\frontend\\src\\App.js":"3","C:\\CS 584 EWA\\Assignment 5 React with Database\\frontend\\src\\Store\\Store.js":"4","C:\\CS 584 EWA\\Assignment 5 React with Database\\frontend\\src\\Context\\ShopContext.js":"5","C:\\CS 584 EWA\\Assignment 5 React with Database\\frontend\\src\\Pages\\Home.js":"6","C:\\CS 584 EWA\\Assignment 5 React with Database\\frontend\\src\\Pages\\ShopCategory.js":"7","C:\\CS 584 EWA\\Assignment 5 React with Database\\frontend\\src\\Pages\\Product.js":"8","C:\\CS 584 EWA\\Assignment 5 React with Database\\frontend\\src\\Pages\\LoginPage.js":"9","C:\\CS 584 EWA\\Assignment 5 React with Database\\frontend\\src\\Pages\\LoginSignup.js":"10","C:\\CS 584 EWA\\Assignment 5 React with Database\\frontend\\src\\Pages\\Cart.js":"11","C:\\CS 584 EWA\\Assignment 5 React with Database\\frontend\\src\\Pages\\ProductCrud.js":"12","C:\\CS 584 EWA\\Assignment 5 React with Database\\frontend\\src\\Pages\\OrderModify.js":"13","C:\\CS 584 EWA\\Assignment 5 React with Database\\frontend\\src\\Pages\\ProductModify.js":"14","C:\\CS 584 EWA\\Assignment 5 React with Database\\frontend\\src\\Pages\\ViewOrderPage.js":"15","C:\\CS 584 EWA\\Assignment 5 React with Database\\frontend\\src\\Pages\\OrderSuccess.js":"16","C:\\CS 584 EWA\\Assignment 5 React with Database\\frontend\\src\\Pages\\CancelOrderPage.js":"17","C:\\CS 584 EWA\\Assignment 5 React with Database\\frontend\\src\\Pages\\OrderCrud.js":"18","C:\\CS 584 EWA\\Assignment 5 React with Database\\frontend\\src\\Pages\\ProductCategory.js":"19","C:\\CS 584 EWA\\Assignment 5 React with Database\\frontend\\src\\Components\\Assets\\all_product.js":"20","C:\\CS 584 EWA\\Assignment 5 React with Database\\frontend\\src\\Components\\Navbar\\Navbar.js":"21","C:\\CS 584 EWA\\Assignment 5 React with Database\\frontend\\src\\Components\\NavBarGeneric\\NavBarGeneric.js":"22","C:\\CS 584 EWA\\Assignment 5 React with Database\\frontend\\src\\Components\\LeftNavigation\\LeftNavigation.js":"23","C:\\CS 584 EWA\\Assignment 5 React with Database\\frontend\\src\\Reducer\\index.js":"24","C:\\CS 584 EWA\\Assignment 5 React with Database\\frontend\\src\\Reducer\\loginReducer.js":"25","C:\\CS 584 EWA\\Assignment 5 React with Database\\frontend\\src\\Reducer\\authReducer.js":"26","C:\\CS 584 EWA\\Assignment 5 React with Database\\frontend\\src\\Reducer\\registerReducer.js":"27","C:\\CS 584 EWA\\Assignment 5 React with Database\\frontend\\src\\Pages\\CartRow.js":"28","C:\\CS 584 EWA\\Assignment 5 React with Database\\frontend\\src\\Reducer\\cartReducer.js":"29","C:\\CS 584 EWA\\Assignment 5 React with Database\\frontend\\src\\Reducer\\orderReducer.js":"30","C:\\CS 584 EWA\\Assignment 5 React with Database\\frontend\\src\\Components\\Hero\\Hero.js":"31","C:\\CS 584 EWA\\Assignment 5 React with Database\\frontend\\src\\Components\\Popular\\Popular.js":"32","C:\\CS 584 EWA\\Assignment 5 React with Database\\frontend\\src\\Components\\Item\\Item.js":"33","C:\\CS 584 EWA\\Assignment 5 React with Database\\frontend\\src\\Pages\\ReviewSuccess.js":"34","C:\\CS 584 EWA\\Assignment 5 React with Database\\frontend\\src\\Pages\\WriteReview.js":"35","C:\\CS 584 EWA\\Assignment 5 React with Database\\frontend\\src\\Pages\\ProductReviews.js":"36"},{"size":890,"mtime":1700522001232,"results":"37","hashOfConfig":"38"},{"size":375,"mtime":1699813348174,"results":"39","hashOfConfig":"38"},{"size":4820,"mtime":1700522216523,"results":"40","hashOfConfig":"38"},{"size":492,"mtime":1699813348173,"results":"41","hashOfConfig":"38"},{"size":1336,"mtime":1700516093982,"results":"42","hashOfConfig":"38"},{"size":243,"mtime":1699813348168,"results":"43","hashOfConfig":"38"},{"size":1214,"mtime":1699838643207,"results":"44","hashOfConfig":"38"},{"size":1075,"mtime":1700515902789,"results":"45","hashOfConfig":"38"},{"size":6347,"mtime":1700510356794,"results":"46","hashOfConfig":"38"},{"size":4010,"mtime":1700510325470,"results":"47","hashOfConfig":"38"},{"size":11220,"mtime":1700539669297,"results":"48","hashOfConfig":"38"},{"size":228,"mtime":1699813348169,"results":"49","hashOfConfig":"38"},{"size":13496,"mtime":1700541720847,"results":"50","hashOfConfig":"38"},{"size":11322,"mtime":1700548010565,"results":"51","hashOfConfig":"38"},{"size":4983,"mtime":1700543769178,"results":"52","hashOfConfig":"38"},{"size":846,"mtime":1699813348169,"results":"53","hashOfConfig":"38"},{"size":502,"mtime":1699813348165,"results":"54","hashOfConfig":"38"},{"size":190,"mtime":1699813348169,"results":"55","hashOfConfig":"38"},{"size":1446,"mtime":1699838655981,"results":"56","hashOfConfig":"38"},{"size":30435,"mtime":1700277551033,"results":"57","hashOfConfig":"38"},{"size":4107,"mtime":1700516406302,"results":"58","hashOfConfig":"38"},{"size":3432,"mtime":1699839195201,"results":"59","hashOfConfig":"38"},{"size":2009,"mtime":1700274201329,"results":"60","hashOfConfig":"38"},{"size":647,"mtime":1699813348171,"results":"61","hashOfConfig":"38"},{"size":2558,"mtime":1699813348172,"results":"62","hashOfConfig":"38"},{"size":559,"mtime":1699813348169,"results":"63","hashOfConfig":"38"},{"size":629,"mtime":1699813348172,"results":"64","hashOfConfig":"38"},{"size":3760,"mtime":1699813348166,"results":"65","hashOfConfig":"38"},{"size":1111,"mtime":1699817548993,"results":"66","hashOfConfig":"38"},{"size":3728,"mtime":1699813348172,"results":"67","hashOfConfig":"38"},{"size":549,"mtime":1699818045540,"results":"68","hashOfConfig":"38"},{"size":990,"mtime":1699839421531,"results":"69","hashOfConfig":"38"},{"size":2615,"mtime":1700516529662,"results":"70","hashOfConfig":"38"},{"size":203,"mtime":1700516668360,"results":"71","hashOfConfig":"38"},{"size":11782,"mtime":1700551284777,"results":"72","hashOfConfig":"38"},{"size":3320,"mtime":1700516715230,"results":"73","hashOfConfig":"38"},{"filePath":"74","messages":"75","suppressedMessages":"76","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"77"},"1ng0uid",{"filePath":"78","messages":"79","suppressedMessages":"80","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"81"},{"filePath":"82","messages":"83","suppressedMessages":"84","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"85"},{"filePath":"86","messages":"87","suppressedMessages":"88","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"81"},{"filePath":"89","messages":"90","suppressedMessages":"91","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"81"},{"filePath":"92","messages":"93","suppressedMessages":"94","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"81"},{"filePath":"95","messages":"96","suppressedMessages":"97","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"81"},{"filePath":"98","messages":"99","suppressedMessages":"100","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"81"},{"filePath":"101","messages":"102","suppressedMessages":"103","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"104","usedDeprecatedRules":"81"},{"filePath":"105","messages":"106","suppressedMessages":"107","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"108","usedDeprecatedRules":"81"},{"filePath":"109","messages":"110","suppressedMessages":"111","errorCount":0,"fatalErrorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"112"},{"filePath":"113","messages":"114","suppressedMessages":"115","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"81"},{"filePath":"116","messages":"117","suppressedMessages":"118","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"119","messages":"120","suppressedMessages":"121","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":1,"source":"122"},{"filePath":"123","messages":"124","suppressedMessages":"125","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"126","messages":"127","suppressedMessages":"128","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"129","usedDeprecatedRules":"81"},{"filePath":"130","messages":"131","suppressedMessages":"132","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"81"},{"filePath":"133","messages":"134","suppressedMessages":"135","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"81"},{"filePath":"136","messages":"137","suppressedMessages":"138","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"81"},{"filePath":"139","messages":"140","suppressedMessages":"141","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"81"},{"filePath":"142","messages":"143","suppressedMessages":"144","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"145","usedDeprecatedRules":"81"},{"filePath":"146","messages":"147","suppressedMessages":"148","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"149","usedDeprecatedRules":"81"},{"filePath":"150","messages":"151","suppressedMessages":"152","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"81"},{"filePath":"153","messages":"154","suppressedMessages":"155","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"81"},{"filePath":"156","messages":"157","suppressedMessages":"158","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"81"},{"filePath":"159","messages":"160","suppressedMessages":"161","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"81"},{"filePath":"162","messages":"163","suppressedMessages":"164","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"81"},{"filePath":"165","messages":"166","suppressedMessages":"167","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"168","usedDeprecatedRules":"81"},{"filePath":"169","messages":"170","suppressedMessages":"171","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"81"},{"filePath":"172","messages":"173","suppressedMessages":"174","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"81"},{"filePath":"175","messages":"176","suppressedMessages":"177","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"81"},{"filePath":"178","messages":"179","suppressedMessages":"180","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"81"},{"filePath":"181","messages":"182","suppressedMessages":"183","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"184","usedDeprecatedRules":"81"},{"filePath":"185","messages":"186","suppressedMessages":"187","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"188","messages":"189","suppressedMessages":"190","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"191","messages":"192","suppressedMessages":"193","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\CS 584 EWA\\Assignment 5 React with Database\\frontend\\src\\index.js",[],[],["194","195","196","197","198","199"],"C:\\CS 584 EWA\\Assignment 5 React with Database\\frontend\\src\\reportWebVitals.js",[],[],["200","201","202","203","204","205"],"C:\\CS 584 EWA\\Assignment 5 React with Database\\frontend\\src\\App.js",["206","207","208","209"],[],"import './App.css';\r\nimport { BrowserRouter, Routes, Route } from 'react-router-dom';\r\nimport { connect, useDispatch } from 'react-redux';\r\nimport Navbar from './Components/Navbar/Navbar';\r\nimport Home from './Pages/Home';\r\nimport ShopCategory from './Pages/ShopCategory';\r\nimport Product from './Pages/Product';\r\nimport Cart from './Pages/Cart';\r\nimport LoginSignup from './Pages/LoginSignup';\r\nimport { Provider } from 'react-redux';\r\nimport store from './Store/Store'; // Import your Redux store\r\nimport all_product from './Components/Assets/all_product';\r\nimport OrderSuccess from './Pages/OrderSuccess';\r\nimport LoginPage from './Pages/LoginPage';\r\nimport NavBarGeneric from './Components/NavBarGeneric/NavBarGeneric';\r\nimport ProductModify from './Pages/ProductModify';\r\nimport ProductCrud from './Pages/ProductCrud';\r\nimport OrderModify from './Pages/OrderModify';\r\nimport OrderCrud from './Pages/OrderCrud';\r\nimport LeftNavigation from './Components/LeftNavigation/LeftNavigation';\r\nimport ProductCategory from './Pages/ProductCategory';\r\nimport ViewOrderPage from './Pages/ViewOrderPage';\r\nimport CancelOrderPage from './Pages/CancelOrderPage';\r\nimport WriteReview from './Pages/WriteReview';\r\nimport ReviewSuccess from './Pages/ReviewSuccess';\r\nimport ProductReviews from './Pages/ProductReviews';\r\n\r\nfunction App({islogin}) {\r\n  return (\r\n    <div>\r\n      <BrowserRouter>\r\n        <Navbar />\r\n        {islogin.islogin && <NavBarGeneric />}\r\n        <div className='main-content'>\r\n        {islogin.islogin && <LeftNavigation />}\r\n        <Routes>\r\n          <Route path='/' element={<Home />} />\r\n          <Route path='/smartdoorbell' element={<ShopCategory category=\"smartdoorbell\" />} />\r\n          <Route path='/smartdoorlock' element={<ShopCategory category=\"smartdoorlock\" />} />\r\n          <Route path='/smartspeaker' element={<ShopCategory category=\"smartspeaker\" />} />\r\n          <Route path='/smartlighting' element={<ShopCategory category=\"smartlighting\" />} />\r\n          <Route path='/smartthermostat' element={<ShopCategory category=\"smartthermostat\" />} />\r\n          <Route path='/' element={<Home />} />\r\n          <Route path='/ConsoleList' element={<ProductCategory category=\"smartdoorbell\" />} />\r\n          <Route path='/GamesList' element={<ProductCategory category=\"smartdoorlock\" />} />\r\n          <Route path='/TabletList' element={<ProductCategory category=\"smartspeaker\" />} />\r\n          <Route path='/LightingList' element={<ProductCategory category=\"smartlighting\" />} />\r\n          <Route path='/ThermostatList' element={<ProductCategory category=\"smartthermostat\" />} />\r\n          <Route path='/AccessoryList' element={<ProductCategory category=\"accessory\" />} />\r\n\r\n\r\n          <Route path='/product' element={<Product />}>\r\n            <Route path=':productId' element={<Product />} />\r\n          </Route>\r\n          <Route path='/cart' element={<Cart />} /> {/* No need to pass cart and items here */}\r\n          <Route path='/orders' element={<OrderSuccess/>}/>\r\n          <Route path='/login' element={<LoginSignup />} />\r\n          <Route path='/loginPage' element={<LoginPage/>}/>\r\n          <Route path='/addproduct' element={<ProductModify productUpdate=\"add\" />}/>\r\n          <Route path='/updateproduct' element={<ProductModify productUpdate=\"update\" />}/>\r\n          <Route path='/deleteproduct' element={<ProductModify productUpdate=\"delete\" />}/>\r\n          <Route path='/productadded' element={<ProductCrud productUpdate=\"added\" />}/>\r\n          <Route path='/productupdated' element={<ProductCrud productUpdate=\"updated\" />}/>\r\n          <Route path='/productdeleted' element={<ProductCrud productUpdate=\"deleted\" />}/>\r\n          <Route path='/addorder' element={<OrderModify orderUpdate=\"add\" />}/>\r\n          <Route path='/updateorder' element={<OrderModify orderUpdate=\"update\" />}/>\r\n          <Route path='/deleteorder' element={<OrderModify orderUpdate=\"delete\" />}/>\r\n          <Route path='/orderadded' element={<OrderCrud orderUpdate=\"added\" />}/>\r\n          <Route path='/orderupdated' element={<OrderCrud orderUpdate=\"updated\" />}/>\r\n          <Route path='/orderdeleted' element={<OrderCrud orderUpdate=\"deleted\" />}/>\r\n          <Route path='/viewOrderPage' element={<ViewOrderPage/>}/>\r\n          <Route path='/cancelOrderPage' element={<CancelOrderPage/>}/>\r\n          <Route path='/writeReview' element={<WriteReview/>}/>\r\n          <Route path='/reviewSuccess' element={<ReviewSuccess/>}/>\r\n          <Route path='/productReviews' element={<ProductReviews/>}/>\r\n        </Routes>\r\n        </div>\r\n      </BrowserRouter>\r\n    </div>\r\n  );\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    islogin: state.islogin, // Assuming your auth state is stored under the key 'auth'\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps)(App);\r\n","C:\\CS 584 EWA\\Assignment 5 React with Database\\frontend\\src\\Store\\Store.js",[],[],"C:\\CS 584 EWA\\Assignment 5 React with Database\\frontend\\src\\Context\\ShopContext.js",[],[],"C:\\CS 584 EWA\\Assignment 5 React with Database\\frontend\\src\\Pages\\Home.js",[],[],"C:\\CS 584 EWA\\Assignment 5 React with Database\\frontend\\src\\Pages\\ShopCategory.js",[],[],"C:\\CS 584 EWA\\Assignment 5 React with Database\\frontend\\src\\Pages\\Product.js",[],[],"C:\\CS 584 EWA\\Assignment 5 React with Database\\frontend\\src\\Pages\\LoginPage.js",["210","211","212","213"],[],"import React, { useContext, useState } from 'react';\r\n\r\nimport './Css/LoginPage.css';\r\nimport { connect, useDispatch } from 'react-redux';\r\nimport PropTypes from 'prop-types';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport { ShopContext } from '../Context/ShopContext';\r\nimport { LoginTypes, createLoginDetails } from '../Reducer/loginReducer';\r\nimport { AuthTypes } from '../Reducer/authReducer';\r\n\r\nconst LoginPage = (props) => {\r\n  const [formData, setFormData] = useState({\r\n    username: '',\r\n    password: '',\r\n    usertype: 'customer', // Default usertype\r\n  });\r\n  const navigate  = useNavigate ();\r\n  const dispatch = useDispatch();\r\n  const{all_product}=useContext(ShopContext);\r\n  const [errorMessage,setErrorMessage]= useState(false);\r\n\r\n  const handleChange = (e) => {\r\n    const { name, value } = e.target;\r\n    setFormData((prevData) => ({\r\n      ...prevData,\r\n      [name]: value,\r\n    }));\r\n  };\r\n  // const addProduct = (id, name, price, image, category, manufacturer, condition, discount, accessories = null) => {\r\n  //   const newProduct = {\r\n  //     id,\r\n  //     name,\r\n  //     price,\r\n  //     image,\r\n  //     category,\r\n  //     manufacturer,\r\n  //     condition,\r\n  //     discount,\r\n  //     accessories\r\n  //   };\r\n  \r\n  //   all_product.push(newProduct);\r\n  // };\r\n  \r\n  // // Example usage:\r\n  // addProduct(\r\n  //   \"New Product ID\",\r\n  //   \"New Product Name\",\r\n  //   99.99,\r\n  //   \"path/to/new_product_image.jpg\",\r\n  //   \"new_category\",\r\n  //   \"New Manufacturer\",\r\n  //   \"New Condition\",\r\n  //   20.0,\r\n  //   {\r\n  //     accessory: [\r\n  //       \"New Accessory 1\",\r\n  //       \"New Accessory 2\"\r\n  //     ]\r\n  //   }\r\n  // );\r\n  \r\n  // Now the new product is added to the 'all_product' array.\r\n  \r\n\r\n  const handleSubmit = async (e) => {\r\n\r\n    e.preventDefault();\r\n\r\n    const matchingRegistration = props.registration.find(\r\n      (reg) => {\r\n        \r\n  \r\n        return (\r\n          reg.username === formData.username &&\r\n          reg.password === formData.password &&\r\n          reg.usertype.toLowerCase() === formData.usertype.toLowerCase()\r\n        );\r\n      }\r\n    );\r\n\r\n    const newLogin = {\r\n      username: formData.username,\r\n      password: formData.password,\r\n      usertype: formData.usertype,\r\n    };\r\n    // dispatch(createLoginDetails({\r\n    //   username: formData.username,\r\n    //   password: formData.password,\r\n    //   usertype: formData.usertype,\r\n    // }));\r\n    try {\r\n      const response = await fetch('http://localhost:3001/login', {\r\n        method: 'POST',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n        },\r\n        body: JSON.stringify({\r\n          username: formData.username,\r\n          password: formData.password,\r\n          usertype: formData.usertype,\r\n        }),\r\n      });\r\n\r\n      if (response.ok) {\r\n        // Registration successful\r\n        // Redirect or show success message\r\n        console.log('Login successful!');\r\n        dispatch({type: LoginTypes.ADD_LOGIN,loginDetails: newLogin});\r\n      dispatch({type: AuthTypes.LOGIN , islogin: !props.islogin});\r\n      // dispatch({type: LoginTypes.ADD_LOGIN,loginDetails: newLogin});\r\n      // dispatch({type: AuthTypes.LOGIN , islogin: !props.islogin});\r\n      // console.log(AuthTypes.LOGIN);\r\n        navigate('/');\r\n      } else {\r\n        // Handle registration failure\r\n        // Show error message or take appropriate action\r\n        setErrorMessage(true);\r\n      console.log('Login failed. Invalid credentials.');\r\n      }\r\n    } catch (error) {\r\n      console.log(\"signin\");\r\n      console.error('Error loging in user:', error);\r\n      // Handle error\r\n    }\r\n//  if (matchingRegistration) {\r\n//       console.log('Login successful!');\r\n//       dispatch({type: LoginTypes.ADD_LOGIN,loginDetails: newLogin});\r\n//       dispatch({type: AuthTypes.LOGIN , islogin: !props.islogin});\r\n//       console.log(AuthTypes.LOGIN);\r\n//       navigate('/');\r\n  \r\n//     } else {\r\n//       setErrorMessage(true);\r\n//       console.log('Login failed. Invalid credentials.');\r\n//     }\r\n  };\r\n\r\n  return (\r\n    <div className='login-page'>\r\n      <div className='login-container'>\r\n        <h1>Login</h1>\r\n        <form onSubmit={handleSubmit}>\r\n          <div className='login-field'>\r\n            <label htmlFor='username'>Username:</label>\r\n            <input\r\n              type='text'\r\n              id='username'\r\n              name='username'\r\n              placeholder='Enter your username'\r\n              value={formData.username}\r\n              onChange={handleChange}\r\n            />\r\n          </div>\r\n          <div className='login-field'>\r\n            <label htmlFor='password'>Password:</label>\r\n            <input\r\n              type='password'\r\n              id='password'\r\n              name='password'\r\n              placeholder='Enter your password'\r\n              value={formData.password}\r\n              onChange={handleChange}\r\n            />\r\n          </div>\r\n          <div className='login-field'>\r\n            <label htmlFor='usertype'>UserType:</label>\r\n            <select\r\n              id='usertype'\r\n              name='usertype'\r\n              value={formData.usertype}\r\n              onChange={handleChange}\r\n            >\r\n              <option value='customer'>Customer</option>\r\n              <option value='retailer'>Store Manager</option>\r\n              <option value='manager'>Salesman</option>\r\n            </select>\r\n          </div>\r\n          {errorMessage && <p className=\"error-message\">Login failed. Invalid credentials.</p>}\r\n          <button type='submit'>Login</button>\r\n        </form>\r\n        {/* <p className='login-signup'>\r\n          Don't have an account? <span>Sign up here</span>\r\n        </p> */}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\n// LoginPage.PropTypes = {\r\n//   registration: PropTypes.arrayOf(PropTypes.shape({\r\n//     userName: PropTypes.string.isRequired,\r\n//     password: PropTypes.string.isRequired,\r\n//     repassword: PropTypes.string.isRequired,\r\n//     userType: PropTypes.string.isRequired,\r\n//   })).isRequired,\r\n// };\r\n\r\nconst mapStateToProps = (state) => {\r\n  console.log(\"mapstate \", state);\r\n  return {\r\n    registration : state.registration,\r\n    islogin: state.islogin,\r\n  };\r\n};\r\n\r\nconst ConnectedLoginPage = connect(mapStateToProps)(LoginPage);\r\n\r\nexport default ConnectedLoginPage;\r\n","C:\\CS 584 EWA\\Assignment 5 React with Database\\frontend\\src\\Pages\\LoginSignup.js",["214"],[],"import React, { useState } from 'react'\r\nimport './Css/LoginSignup.css'\r\nimport { Form, Link, useNavigate } from 'react-router-dom'\r\nimport { RegisterTypes } from '../Reducer/registerReducer';\r\nimport { useDispatch } from 'react-redux';\r\n\r\nconst LoginSignup = () => {\r\n  const [userName, setUserName] = useState('');\r\n  const [password, setPassword] = useState('');\r\n  const [repassword, setRepassword] = useState('');\r\n  const [userType, setUserType] = useState('Customer');\r\n  const [passwordsMatch, setPasswordsMatch] = useState(true);\r\n  const navigate  = useNavigate ();\r\n  const dispatch =useDispatch();\r\n\r\n\r\n  const register = async (event) => {\r\n    event.preventDefault();\r\n\r\n    if (password !== repassword) {\r\n      // Passwords don't match, set passwordsMatch to false\r\n      setPasswordsMatch(false);\r\n      return;\r\n    }\r\n\r\n    try {\r\n      const response = await fetch('http://localhost:3001/register', {\r\n        method: 'POST',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n        },\r\n        body: JSON.stringify({\r\n          username: userName,\r\n          password: password,\r\n          usertype: userType,\r\n        }),\r\n      });\r\n\r\n      if (response.ok) {\r\n        // Registration successful\r\n        // Redirect or show success message\r\n        setPasswordsMatch(true);\r\n        navigate('/loginPage');\r\n      } else {\r\n        // Handle registration failure\r\n        // Show error message or take appropriate action\r\n      }\r\n    } catch (error) {\r\n      console.log(\"signup\");\r\n      console.error('Error registering user:', error);\r\n      // Handle error\r\n    }\r\n    console.log('name: ', userName);\r\n    console.log('phone: ', password);\r\n    console.log('zipcode: ', repassword);\r\n    console.log('credit: ', userType);\r\n\r\n    const newRegistration = {\r\n      username: userName,\r\n      password: password,\r\n      repassword: repassword,\r\n      usertype: userType,\r\n    };\r\n\r\n    // Dispatch the ADD_REGISTRATION action to add the new registration\r\n    dispatch({ type: RegisterTypes.ADD_REGISTRATION, registration: newRegistration });\r\n\r\n\r\n\r\n    //console.log(\"order state \", order);\r\n   // console.log(\" cart state\", this.state);\r\n  //  dispatch({ type: CartTypes.CLEAR });\r\n  \r\n  //  navigate('/loginPage');\r\n  };\r\n  return (\r\n  \r\n<form onSubmit={register} className='loginsignup'>\r\n  <div className=\"loginsignup-container\">\r\n    <h1>Sign up</h1>\r\n    <div className=\"loginsignup-fields\">\r\n      <div className='loginsignup-field'>\r\n        <label htmlFor='username'>UserName:</label>\r\n        <input type='text' value={userName} placeholder='User Name'  onChange={(event) => setUserName(event.target.value)} required/>\r\n      </div>\r\n      <div className='loginsignup-field'>\r\n        <label htmlFor='password'>Password:</label>\r\n        <input type='password' value={password} placeholder='Password'  onChange={(event) => setPassword(event.target.value)} required/>\r\n      </div>\r\n      <div className='loginsignup-field'>\r\n        <label htmlFor='repassword'>Retype Password:</label>\r\n        <input type=\"password\" value={repassword} placeholder='Re-Password'  onChange={(event) => setRepassword(event.target.value)} required />\r\n      </div>\r\n      <div className='loginsignup-field'>\r\n        <label htmlFor='usertype'>UserType:</label>\r\n        <select value={userType} name='usertype'  onChange={(event) => setUserType(event.target.value)}>\r\n          <option value='customer' selected>Customer</option>\r\n          <option value='retailer'>Store Manager</option>\r\n          <option value='manager'>Salesman</option>\r\n        </select>\r\n      </div>\r\n    </div>\r\n    {!passwordsMatch && <p className=\"error-message\">Passwords do not match</p>}\r\n    <button type='submit'>Continue</button>\r\n    <p className=\"loginsignup-login\">\r\n      Already have an account? \r\n      <Link style={{textDecoration: 'none'}} to='/loginpage'>\r\n        <span> Login here</span>\r\n      </Link>\r\n    </p>\r\n  </div>\r\n</form>\r\n   \r\n  )\r\n}\r\n\r\n\r\n\r\nexport default LoginSignup","C:\\CS 584 EWA\\Assignment 5 React with Database\\frontend\\src\\Pages\\Cart.js",["215","216","217","218","219","220","221"],[],"import React, { useContext, useState, useEffect } from 'react';\r\nimport { connect, useDispatch } from 'react-redux'; // Import connect from react-redux\r\nimport CartRow from './CartRow'; // Assuming you have a CartRow component\r\nimport PropTypes from 'prop-types';\r\nimport { ShopContext } from '../Context/ShopContext';\r\nimport './Css/Cart.css'\r\nimport { createOrder, generateOrderId } from '../Reducer/orderReducer';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport { CartTypes } from '../Reducer/cartReducer';\r\nimport Popular from '../Components/Popular/Popular';\r\n\r\nfunction Cart({ cart, items, order }) {\r\n  const [name, setName] = useState('');\r\n  const [creditCardNumber, setCreditCardNumber] = useState('');\r\n  const [street, setStreet] = useState('');\r\n  const [city, setCity] = useState('');\r\n  const [states, setStates] = useState('');\r\n  const [orderType, setOrderTpye] = useState('Home delivery');\r\n  const [instorePickup, setInstorePickup] = useState('--------------------');\r\n  const [phone, setPhone] = useState('');\r\n  const [zipCode, setZipCode] = useState('');\r\n  const {all_product}=useContext(ShopContext);\r\n  const dispatch= useDispatch();\r\n  const navigate  = useNavigate ();\r\n\r\n  const cartAccessories = cart.reduce((acc, item) => {\r\n    const detailItem = all_product.find((i) => i.id === item.id);\r\n    if (detailItem && detailItem.accessories) {\r\n      acc.push(...detailItem.accessories);\r\n    }\r\n    return acc;\r\n  }, []);\r\n\r\n  // const subTotal = cart.reduce((acc, item) => {\r\n  //   const detailItem = all_product.find((i) => i.id === item.id);\r\n  //   const itemPrice = detailItem.salePrice ?? detailItem.price;\r\n  //   return item.quantity * itemPrice + acc;\r\n  // }, 0);\r\n  const subTotal = cart.reduce((acc, item) => {\r\n    const detailItem = all_product.find((i) => i.id === item.id);\r\n  \r\n    if (detailItem) {\r\n      const itemPrice = detailItem.salePrice ?? detailItem.price;\r\n      return item.quantity * itemPrice + acc;\r\n    }\r\n  \r\n    return acc;\r\n  }, 0);\r\n  const orderDetails = cart.map((item) => ({\r\n    productId: item.id, // Assuming 'id' represents the productId\r\n    orderPrice: item.price, // Assuming 'orderPrice' is the price of the item in the cart\r\n  }));\r\n\r\n  const taxPercentage = parseInt(zipCode.substring(0, 1) || '0', 10) + 1;\r\n  const taxRate = taxPercentage / 100;\r\n  const tax = subTotal * taxRate;\r\n  const total = subTotal + tax;\r\n  const isFormValid = zipCode.length === 5 && name.trim();\r\n  const discount = 40.0;\r\n  \r\n \r\n  \r\n    // const [today, setToday] = useState(new Date());\r\n    // const purchaseDate = `${today.getFullYear()}-${(today.getMonth() + 1)\r\n    //   .toString()\r\n    //   .padStart(2, '0')}-${today.getDate().toString().padStart(2, '0')}`;\r\n    // const futureDate = new Date(today);\r\n    // futureDate.setDate(futureDate.getDate() + 14);\r\n    // setToday(futureDate);\r\n    const purchaseDate=\"11-21-2023\";\r\n    const deliveryDate=\"12-4-2023\";\r\n  const storeCity='Chicago';\r\n  const storeState = 'IL';\r\n  const storeZip ='60645';\r\n\r\n\r\n  const submitOrder = async (event) => {\r\n    event.preventDefault();\r\n  \r\n    try {\r\n      const response = await fetch('http://localhost:3001/storeOrder', {\r\n        method: 'POST',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n        },\r\n        body: JSON.stringify({\r\n          customerName: name,\r\n          creditCardNumber,\r\n          street,\r\n          city,\r\n          state: states,\r\n          zipCode,\r\n          orderType,\r\n          orderDetails: cart.map((item) => ({\r\n            productId: item.id,\r\n            quantity: item.quantity\r\n          })),\r\n          instorePickup,\r\n          orderPrice : subTotal,\r\n          discount,\r\n          purchaseDate,\r\n          deliveryDate,\r\n          storeCity,\r\n          storeState,\r\n          storeZip,\r\n\r\n        }),\r\n      });\r\n      if (response.ok) {\r\n        console.log('Order submitted successfully');\r\n        // ... other code ...\r\n      } else {\r\n        console.error('Error submitting order:', response.statusText);\r\n      }\r\n      // Rest of your code for handling the response...\r\n    } catch (error) {\r\n      console.error('Error placing order:', error);\r\n      // Handle error\r\n    }\r\n  };\r\n  \r\n  \r\n\r\n  const setFormattedPhone = (newNumber) => {\r\n    const digits = newNumber.replace(/\\D/g, '');\r\n    let formatted = digits.substring(0, 3);\r\n    if (digits.length === 3 && newNumber[3] === '-') {\r\n      formatted = `${formatted}-`;\r\n    } else if (digits.length > 3) {\r\n      formatted = `${formatted}-${digits.substring(3, 6)}`;\r\n    }\r\n    if (digits.length === 6 && newNumber[7] === '-') {\r\n      formatted = `${formatted}-`;\r\n    } else if (digits.length > 6) {\r\n      formatted = `${formatted}-${digits.substring(6, 10)}`;\r\n    }\r\n    setPhone(formatted);\r\n  };\r\n\r\n  return (\r\n    <div className=\"cart-component\">\r\n      <h2>Your Cart</h2>\r\n      {cart.length === 0 ? (\r\n        <div>Your cart is empty.</div>\r\n      ) : (\r\n        <>\r\n          <table>\r\n            <thead>\r\n              <tr>\r\n                <th>Quantity</th>\r\n                <th>Item</th>\r\n                <th>Price</th>\r\n              </tr>\r\n            </thead>\r\n            <tbody>\r\n              {cart.map((item) => (\r\n                <CartRow \r\n                  key={item.id}\r\n                  cartItem={item}\r\n                  items={all_product}\r\n                />\r\n              ))}\r\n            </tbody>\r\n          </table>\r\n          <div>\r\n            Subtotal: $\r\n            {subTotal.toFixed(2)}\r\n          </div>\r\n          <div> \r\n            <Popular accessories={cartAccessories}/>\r\n          </div>\r\n          { zipCode.length === 5\r\n            ? (\r\n              <>\r\n                <div>\r\n                  Tax: $\r\n                  {tax.toFixed(2)}\r\n                </div>\r\n                <div>\r\n                  Total: $\r\n                  { total.toFixed(2) }\r\n                </div>\r\n              </>\r\n            ) : (\r\n              <div className=\"warning\">Enter ZIP Code to get total</div>\r\n            )}\r\n          <h2>Checkout</h2>\r\n          <form onSubmit={submitOrder}>\r\n          <label htmlFor=\"creditCardNumber\">\r\n              Credit Card Number\r\n              <input\r\n                id=\"creditCardNumber\"\r\n                type=\"text\"\r\n                value={creditCardNumber}\r\n                onChange={(event) => setCreditCardNumber(event.target.value)}\r\n                required\r\n              />\r\n              </label>\r\n            <label htmlFor=\"name\">\r\n             Customer Name\r\n              <input\r\n                id=\"name\"\r\n                type=\"text\"\r\n                value={name}\r\n                onChange={(event) => setName(event.target.value)}\r\n                required\r\n              />\r\n            </label>\r\n            <label htmlFor=\"street\">\r\n            Street\r\n              <input\r\n                id=\"street\"\r\n                type=\"text\"\r\n                value={street}\r\n                onChange={(event) => setStreet(event.target.value)}\r\n                required\r\n              />\r\n            </label>\r\n            <label htmlFor=\"city\">\r\n            City\r\n              <input\r\n                id=\"city\"\r\n                type=\"text\"\r\n                value={city}\r\n                onChange={(event) => setCity(event.target.value)}\r\n                required\r\n              />\r\n            </label>\r\n            <label htmlFor=\"states\">\r\n            State\r\n              <input\r\n                id=\"states\"\r\n                type=\"text\"\r\n                value={states}\r\n                onChange={(event) => setStates(event.target.value)}\r\n                required\r\n              />\r\n            </label>\r\n\r\n            <label htmlFor=\"phone\">\r\n              Phone Number\r\n              <input\r\n                id=\"phone\"\r\n                type=\"tel\"\r\n                value={phone}\r\n                onChange={(event) => setFormattedPhone(event.target.value)}\r\n              />\r\n            </label>\r\n            <label htmlFor=\"zipcode\">\r\n              ZIP Code\r\n              <input\r\n                id=\"zipcode\"\r\n                type=\"text\"\r\n                maxLength=\"5\"\r\n                inputMode=\"numeric\"\r\n                value={zipCode}\r\n                onChange={(event) => setZipCode(event.target.value)}\r\n                required\r\n              />\r\n            </label>\r\n            <label htmlFor=\"orderTpye\">\r\n             Order Type\r\n              <select\r\n                id=\"orderTpye\"\r\n                value={orderType}\r\n                onChange={(event) => setOrderTpye(event.target.value)}\r\n                required\r\n              >\r\n                <option value='Home delivery' selected>Home delivery</option><option value='In store pickup'>In store pickup</option>\r\n                </select>\r\n            </label>\r\n            <label htmlFor=\"instorePickup\">\r\n            In-store Pickup Locations\r\n              <select\r\n                id=\"instorePickup\"\r\n                value={instorePickup}\r\n                onChange={(event) => setInstorePickup(event.target.value)}\r\n                required\r\n              >\r\n                <option value='--------------------' selected>------------------</option><option value='Smartgoodsstore'> Smart goods store,6410 N Clark St</option><option value='furniturestore'>Furniture store in Skokie, Illinois</option><option value='targetstore'> Target store 6422 N Sheridan Rd</option><option value='electronicsstore'>Electronics store 1000 W North Ave</option>\r\n        <option value='homeimprovementstore'>Home improvement store 6211 N Lincoln Ave</option>\r\n       <option value='appliancestore'>Appliance store 1300 W North Ave</option>\r\n        <option value='casonastore'> Casona store 5241 N Clark St</option>\r\n        <option value='lowesstore'>lowes store 1360 N Ashland Ave</option>\r\n        <option value='homegoodsstore'> Home goods store 1840 N Clybourn Ave</option>\r\n        <option value='walmartstore'>Walmart store 4650 W North Ave</option>\r\n                </select>\r\n            </label>\r\n\r\n            <button type=\"submit\" disabled={!isFormValid}>\r\n              Order Now\r\n            </button>\r\n          </form>\r\n        </>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nCart.propTypes = {\r\n  cart: PropTypes.arrayOf(PropTypes.shape({\r\n    itemId: PropTypes.string.isRequired,\r\n    quantity: PropTypes.number.isRequired,\r\n  })).isRequired,\r\n  order: PropTypes.shape({\r\n    orderId:PropTypes.number,\r\n    cart: PropTypes.arrayOf(PropTypes.object),\r\n    name: PropTypes.string,\r\n    creditCardNumber: PropTypes.string,\r\n    street: PropTypes.string,\r\n    city: PropTypes.string,\r\n    state: PropTypes.string,\r\n    zipCode: PropTypes.string,\r\n    orderType: PropTypes.string,\r\n    instorePickup: PropTypes.string,\r\n  }).isRequired,\r\n  items: PropTypes.array.isRequired, // Adjust the PropTypes as needed\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n  console.log(\"mapstate \", state);\r\n  return {\r\n    cart: state.cart, // Assuming \"cart\" is the key under which the cart data is stored in your store\r\n    order : state.order,\r\n   // register : state.register,\r\n  };\r\n};\r\n\r\nconst ConnectedCart = connect(mapStateToProps)(Cart);\r\n\r\nexport default ConnectedCart;\r\n\r\n\r\n\r\n\r\n","C:\\CS 584 EWA\\Assignment 5 React with Database\\frontend\\src\\Pages\\ProductCrud.js",[],[],"C:\\CS 584 EWA\\Assignment 5 React with Database\\frontend\\src\\Pages\\OrderModify.js",[],[],"C:\\CS 584 EWA\\Assignment 5 React with Database\\frontend\\src\\Pages\\ProductModify.js",["222"],[],"import React, { useContext, useState } from 'react'\r\nimport '../Pages/Css/Cart.css'\r\nimport { ShopContext } from '../Context/ShopContext';\r\nimport { useNavigate } from 'react-router-dom';\r\n\r\nconst ProductModify = ({productUpdate}) => {\r\n    const [productId, setProductId] = useState('');\r\n    const [productName, setProductName] = useState('');\r\n    const [productPrice, setProductPrice] = useState('');\r\n    const [productImage, setProductImage] = useState('');\r\n    const [productCategory, setProductCategory] = useState('smartdoorbell');\r\n    const [productManufacturer, setProductManufacturer] = useState('');\r\n    const [productCondition, setProductCondition] = useState('');\r\n    const [productDiscount, setProductDiscount] = useState('');\r\n    const [errorMessage, setErrorMessage] = useState('');\r\n    const {all_product}= useContext(ShopContext);\r\n    const navigate = useNavigate();\r\n\r\n\r\n    const addProduct = async (id, name, price, image, category, manufacturer, condition, discount, accessories = null) => {\r\n      \r\n      console.log(\"productId\",id);\r\n      console.log(\"productName\",name);\r\n      console.log(\"productPrice\",price);\r\n      console.log(\"productImage\",image);\r\n      console.log(\"productCategory\",category);\r\n      console.log(\"productManufacturer\",manufacturer);\r\n      console.log(\"productCondition\",condition);\r\n      console.log(\"productDiscount\",discount);\r\n        const newProduct = {\r\n          id,\r\n          name,\r\n          price,\r\n          image,\r\n          category,\r\n          manufacturer,\r\n          condition,\r\n          discount,\r\n          accessories\r\n        };\r\n      \r\n        all_product.push(newProduct);\r\n\r\n\r\n        try {\r\n          const response = await fetch('http://localhost:3001/addProduct', {\r\n            method: 'POST',\r\n            headers: {\r\n              'Content-Type': 'application/json',\r\n            },\r\n            body: JSON.stringify({\r\n              id,\r\n              name,\r\n              price,\r\n              image,\r\n              category,\r\n              manufacturer,\r\n              conditions: condition,\r\n              discount,\r\n              warranty:\"2 months\",\r\n              rebates:\"2%\",\r\n              description: name,\r\n            }),\r\n          });\r\n          if (response.ok) {\r\n            console.log('Product added successfully');\r\n            // ... other code ...\r\n          } else {\r\n            console.error('Error adding product:', response.statusText);\r\n          }\r\n          // Rest of your code for handling the response...\r\n        } catch (error) {\r\n          console.error('Error adding product:', error);\r\n          // Handle error\r\n        }\r\n        \r\n        navigate('/productadded');\r\n      };\r\n\r\n      const updateProduct = async(productId, updatedDetails) => {\r\n        const productIndex = all_product.findIndex(product => product.id === productId);\r\n      \r\n        if (productIndex !== -1) {\r\n          // If the product is found, update the specified fields\r\n          all_product[productIndex] = {\r\n            ...all_product[productIndex],\r\n            ...  updatedDetails\r\n          };\r\n\r\n          try {\r\n            const response = await fetch('http://localhost:3001/updateProduct', {\r\n              method: 'POST',\r\n              headers: {\r\n                'Content-Type': 'application/json',\r\n              },\r\n              body: JSON.stringify({\r\n                id: productId,\r\n                updatedDetails,\r\n              }),\r\n            });\r\n            if (response.ok) {\r\n              console.log('Product updated successfully');\r\n              // ... other code ...\r\n            } else {\r\n              console.error('Error updating product:', response.statusText);\r\n            }\r\n            // Rest of your code for handling the response...\r\n          } catch (error) {\r\n            console.error('Error updating product:', error);\r\n            // Handle error\r\n          }\r\n          navigate('/productupdated');\r\n        } else {\r\n          setErrorMessage(`Product with ID ${productId} not found.`);\r\n          console.error(`Product with ID ${productId} not found.`);\r\n        }\r\n      };\r\n      \r\n      // Example usage:\r\n      //updateProduct(\"Google Nest Doorbell (Wired)\", { price: 219.99, discount: 15.0 });\r\n\r\n      const deleteProduct = async(productId) => {\r\n        const productIndex = all_product.findIndex(product => product.id === productId);\r\n      \r\n        if (productIndex !== -1) {\r\n          // If the product is found, remove it from the array\r\n          all_product.splice(productIndex, 1);\r\n          try {\r\n            const response = await fetch('http://localhost:3001/deleteProduct', {\r\n              method: 'POST',\r\n              headers: {\r\n                'Content-Type': 'application/json',\r\n              },\r\n              body: JSON.stringify({\r\n                id: productId,\r\n              }),\r\n            });\r\n            if (response.ok) {\r\n              console.log('Product deleted successfully');\r\n              // ... other code ...\r\n            } else {\r\n              console.error('Error deleting product:', response.statusText);\r\n            }\r\n            // Rest of your code for handling the response...\r\n          } catch (error) {\r\n            console.error('Error deleting product:', error);\r\n            // Handle error\r\n          }\r\n          navigate('/productdeleted');\r\n        } else {\r\n          setErrorMessage(`Product with ID ${productId} not found.`);\r\n          console.error(`Product with ID ${productId} not found.`);\r\n        }\r\n      };\r\n      \r\n      // Example usage:\r\n      //deleteProduct(\"Google Nest Doorbell (Wired)\");\r\n      \r\n      \r\n\r\n    const submitAddProduct=(event)=>{\r\n      event.preventDefault();\r\n     console.log(\"productId\",productId);\r\n     console.log(\"productName\",productName);\r\n     console.log(\"productPrice\",productPrice);\r\n     console.log(\"productImage\",productImage);\r\n     console.log(\"productCategory\",productCategory);\r\n     console.log(\"productManufacturer\",productManufacturer);\r\n     console.log(\"productCondition\",productCondition);\r\n     console.log(\"productDiscount\",productDiscount);\r\n \r\n     if(productUpdate==='add'){\r\n      // addProduct(\r\n      //   \"New Product ID\",\r\n      //   \"New Product Name\",\r\n      //   99.99,\r\n      //   \"path/to/new_product_image.jpg\",\r\n      //   \"smartdoorbell\",\r\n      //   \"New Manufacturer\",\r\n      //   \"New Condition\",\r\n      //   20.0,null\r\n      // );\r\n     addProduct(productId, productName, productPrice, productImage, productCategory, productManufacturer, productCondition, productDiscount,null);\r\n     }\r\n     else{\r\n      const updatedDetails={\r\n        name:productName,\r\n        price:productPrice,\r\n        image: productImage,\r\n        category: productCategory,\r\n        manufacturer: productManufacturer,\r\n        conditions: productCondition,\r\n        discount: productDiscount,\r\n      }\r\n    updateProduct(productId,updatedDetails);\r\n     }\r\n    }\r\n\r\n    const submitDeleteProduct=(event)=>{\r\n      event.preventDefault();\r\n      deleteProduct(productId);\r\n    }\r\n\r\n  return (\r\n    productUpdate==='add'|| productUpdate==='update'?(\r\n    <div className='cart-component'>\r\n         <h2>{productUpdate === 'add' ? 'Add Product' : 'Update Product'}</h2>\r\n          <form onSubmit={submitAddProduct}>\r\n          <label htmlFor=\"productId\">\r\n             Product ID\r\n              <input\r\n                id=\"productId\"\r\n                type=\"text\"\r\n                value={productId}\r\n                onChange={(event) => setProductId(event.target.value)}\r\n                required\r\n              />\r\n              </label>\r\n            <label htmlFor=\"productName\">\r\n            Product Name\r\n              <input\r\n                id=\"productName\"\r\n                type=\"text\"\r\n                value={productName}\r\n                onChange={(event) => setProductName(event.target.value)}\r\n                required\r\n              />\r\n            </label>\r\n            <label htmlFor=\"productPrice\">\r\n            Product Price\r\n              <input\r\n                id=\"productPrice\"\r\n                type=\"numeric\"\r\n                value={productPrice}\r\n                onChange={(event) => setProductPrice(event.target.value)}\r\n                required\r\n              />\r\n            </label>\r\n            <label htmlFor=\"productImage\">\r\n            Product Image\r\n              <input\r\n                id=\"productImage\"\r\n                type=\"text\"\r\n                value={productImage}\r\n                onChange={(event) => setProductImage(event.target.value)}\r\n                required\r\n              />\r\n            </label>\r\n            <label htmlFor=\"productCategory\">\r\n            Product Category\r\n              <select\r\n                id=\"productCategory\"\r\n                value={productCategory}\r\n                onChange={(event) => setProductCategory(event.target.value)}\r\n                required\r\n              >\r\n                <option value='smartdoorbell' >smartdoorbell</option><option value='smartdoorlock'>smartdoorlock</option><option value='smartspeaker'>smartspeaker</option>\r\n                <option value='smartlighting'>smartlighting</option>\r\n                <option value='smartthermostat'>smartthermostat</option>\r\n                </select>\r\n            </label>\r\n            <label htmlFor=\"productManufacturer\">\r\n            Product Manufacturer\r\n              <input\r\n                id=\"productManufacturer\"\r\n                type=\"text\"\r\n                value={productManufacturer}\r\n                onChange={(event) => setProductManufacturer(event.target.value)}\r\n                required\r\n              />\r\n            </label>\r\n\r\n            <label htmlFor=\"productCondition\">\r\n            Product Condition\r\n              <input\r\n                id=\"productCondition\"\r\n                type=\"text\"\r\n                value={productCondition}\r\n                onChange={(event) => setProductCondition(event.target.value)}\r\n              />\r\n            </label>\r\n            <label htmlFor=\"productDiscount\">\r\n            Product Discount\r\n              <input\r\n                id=\"productDiscount\"\r\n                type=\"number\"\r\n                value={productDiscount}\r\n                onChange={(event) => setProductDiscount(event.target.value)}\r\n                required\r\n              />\r\n            </label>\r\n            {errorMessage && <div className=\"error-message\">{errorMessage}</div>}\r\n            {productUpdate === 'add' ? (\r\n              <button type=\"submit\">Add Product</button>\r\n            ) : (\r\n              <button type=\"submit\">Update</button>\r\n            )}\r\n          </form>\r\n    </div>\r\n    ):\r\n    (\r\n      <div className='cart-component'>\r\n      <h2>Delete Product</h2>\r\n       <form onSubmit={submitDeleteProduct}>\r\n       <label htmlFor=\"productId\">\r\n          Product ID\r\n           <input\r\n             id=\"productId\"\r\n             type=\"text\"\r\n             value={productId}\r\n             onChange={(event) => setProductId(event.target.value)}\r\n             required\r\n           />\r\n           </label>\r\n           {errorMessage && <div className=\"error-message\">{errorMessage}</div>}\r\n         <button type=\"submit\" >\r\n          DeleteProduct\r\n         </button>\r\n       </form>\r\n </div>\r\n    )\r\n  )\r\n}\r\n\r\nexport default ProductModify","C:\\CS 584 EWA\\Assignment 5 React with Database\\frontend\\src\\Pages\\ViewOrderPage.js",["223"],[],"C:\\CS 584 EWA\\Assignment 5 React with Database\\frontend\\src\\Pages\\OrderSuccess.js",["224"],[],"import React from 'react';\r\nimport { useLocation } from 'react-router-dom';\r\n\r\nconst OrderSuccess = () => {\r\n  const location = useLocation();\r\n  const searchParams = new URLSearchParams(location.search);\r\n  const orderId = searchParams.get('orderId');\r\n  const orderType = searchParams.get('orderType');\r\n\r\n  return (\r\n    <div>\r\n      <div>\r\n        <h2>\r\n          <a>Order Summary:</a>\r\n        </h2>\r\n        <div>\r\n          {/* <h3> the user address is userAddress</h3> */}\r\n          <h2>Your Order is stored </h2>\r\n          <h2>Your Order No is {orderId} </h2>\r\n          <h2>Your {orderType} Date is 11-20-2023 </h2>\r\n          <h2>\r\n            Note: You can cancel an order 5 business days before the delivery date i.e. 11-15-2023\r\n          </h2>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default OrderSuccess;\r\n","C:\\CS 584 EWA\\Assignment 5 React with Database\\frontend\\src\\Pages\\CancelOrderPage.js",[],[],"C:\\CS 584 EWA\\Assignment 5 React with Database\\frontend\\src\\Pages\\OrderCrud.js",[],[],"C:\\CS 584 EWA\\Assignment 5 React with Database\\frontend\\src\\Pages\\ProductCategory.js",[],[],"C:\\CS 584 EWA\\Assignment 5 React with Database\\frontend\\src\\Components\\Assets\\all_product.js",[],[],"C:\\CS 584 EWA\\Assignment 5 React with Database\\frontend\\src\\Components\\Navbar\\Navbar.js",["225","226","227"],[],"\r\n\r\nimport React, { useContext, useState } from 'react'\r\nimport './Navbar.css';\r\nimport { ShopContext } from '../../Context/ShopContext';\r\nimport logo from '../Assets/site/SmartHome.jpg'\r\nimport { Link, useNavigate } from 'react-router-dom';\r\nimport { CartTypes, getTotalCartItems } from '../../Reducer/cartReducer';\r\nimport { connect, useDispatch } from 'react-redux';\r\nimport { AuthTypes } from '../../Reducer/authReducer';\r\nimport allProducts from '../Assets/all_product';\r\nimport { type } from '@testing-library/user-event/dist/type';\r\nimport Product from '../../Pages/Product';\r\n\r\nconst Navbar = (props) => {\r\n    const[menu,setMenu]= useState(\"home\");\r\n    const navigate = useNavigate();\r\n    const dispatch = useDispatch();\r\n    const [value, setValue] = useState('');\r\n    const { filterProducts, filteredProducts } = useContext(ShopContext);\r\n\r\n\r\n    const onChange = (event) =>{\r\n      setValue(event.target.value);\r\n      filterProducts(event.target.value);\r\n    }\r\n\r\n    const handlelogout=()=>{\r\n      console.log(\"logout \",props.islogin.islogin);\r\n     dispatch({ type: AuthTypes.LOGOUT , islogin: !props.islogin.islogin});\r\n     dispatch({type: CartTypes.CLEAR});\r\n      console.log(props.islogin);\r\n      console.log('b');\r\n      navigate('/login'); \r\n    };\r\n  return (\r\n    <div className='navbar'>\r\n    <div className=\"nav-logo\">\r\n        <img src={logo} alt=\"\"/>\r\n        <p> SmartHome</p>\r\n    </div>\r\n    <ul className=\"nav-menu\">\r\n        <li onClick={()=>{setMenu(\"home\")}}> <Link style={{textDecoration: 'none',  }} to='/'>Home</Link> {menu===\"home\"?<hr/>:<></>}</li>\r\n        <li  onClick={()=>{setMenu(\"smartdoorbell\")}}> <Link style={{textDecoration: 'none'}} to='/smartdoorbell'>Smart Doorbell</Link> {menu===\"smartdoorbell\"?<hr/>:<></>}</li>\r\n        <li  onClick={()=>{setMenu(\"smartdoorlock\")}}> <Link style={{textDecoration: 'none'}} to ='/smartdoorlock'>Smart Doorlock </Link> {menu===\"smartdoorlock\"?<hr/>:<></>}</li>\r\n        <li onClick={()=>{setMenu(\"smartspeaker\")}}> <Link style={{textDecoration: 'none'}} to ='/smartspeaker'>Smart Speaker</Link>{menu===\"smartspeaker\"?<hr/>:<></>}</li>\r\n        <li onClick={()=>{setMenu(\"smartlighting\")}}> <Link style={{textDecoration: 'none'}} to ='/smartlighting'>Smart Lighting</Link >{menu===\"smartlighting\"?<hr/>:<></>}</li>\r\n        <li onClick={()=>{setMenu(\"smartthermostat\")}}> <Link style={{textDecoration: 'none'}} to ='/smartthermostat'>Smart Thermostat</Link>{menu===\"smartthermostat\"?<hr/>:<></>}</li>\r\n    </ul>\r\n    <div className=\"nav-login-cart\">\r\n    { props.islogin.islogin ? (\r\n          <button onClick={handlelogout}>Logout</button>\r\n        ) : (\r\n          <Link style={{ textDecoration: 'none' }} to='/login'>\r\n            <button>Login/SignUp</button>\r\n          </Link>\r\n        )}\r\n        <Link style={{textDecoration: 'none'}} to ='/cart'> <p>Cart</p> </Link>\r\n        <div className=\"nav-cart-count\">{props.totalCartItems}</div>\r\n    </div>\r\n    <div className=\"search-container\">\r\n          <div className=\"search-inner\">\r\n            <input type=\"text\" value={value} onChange={onChange} />\r\n            <button onClick={()=>filterProducts(value)}>Search</button>\r\n          </div>\r\n          <div className=\"dropdown\">\r\n            {allProducts.filter(item => {\r\n              const searchTerm = value.toLowerCase();\r\n              const productName = item.name.toLowerCase();\r\n              return searchTerm && productName.startsWith(searchTerm) && productName !== searchTerm;\r\n            })\r\n            .map((item)=> (\r\n              <Link to={`/product/${item.id}`} className =\"dropdown-row\" key={item.id}>{item.name}</Link>\r\n            // <div onClick={()=>filterProducts(item.name)}className=\"dropdown-row\" key={item.id}>\r\n            //     {item.name}\r\n            //   </div>\r\n            ))}\r\n          </div>\r\n    </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    totalCartItems: getTotalCartItems(state.cart),\r\n    islogin: state.islogin, // Get total cart items from the Redux store\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps)(Navbar);\r\n","C:\\CS 584 EWA\\Assignment 5 React with Database\\frontend\\src\\Components\\NavBarGeneric\\NavBarGeneric.js",["228","229","230"],[],"import React, { useState } from 'react';\r\nimport '../Navbar/Navbar.css';\r\nimport logo from '../Assets/site/SmartHome.jpg';\r\nimport { getTotalCartItems } from '../../Reducer/cartReducer';\r\nimport { Link } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\n\r\n\r\nconst NavBarGeneric = ({ loginDetails }) => {\r\n  const [menu, setMenu] = useState('home');\r\n  console.log(\"login username usertype1111\", loginDetails);\r\n  \r\n  // Extract usertype from loginDetails\r\n  const usertype  = loginDetails.length>0? loginDetails[loginDetails.length - 1].usertype: 'Customer';\r\n  const username  = loginDetails.length>0? loginDetails[loginDetails.length - 1].username: '';\r\n  console.log(\"usertype\",usertype);\r\n\r\n  return (\r\n    <div className=\"navbar\">\r\n      \r\n      <ul className=\"nav-menu\">\r\n        \r\n        \r\n        \r\n        \r\n        {/* Conditionally display links based on usertype */}\r\n        {usertype === 'retailer' && (\r\n          <>\r\n            <li>\r\n              <Link style={{ textDecoration: 'none' }} to=\"/addproduct\">\r\n                Add Product\r\n              </Link>\r\n            </li>\r\n            <li>\r\n              <Link style={{ textDecoration: 'none' }} to=\"/deleteproduct\">\r\n                Delete Product\r\n              </Link>\r\n            </li>\r\n            <li>\r\n              <Link style={{ textDecoration: 'none' }} to=\"/updateproduct\">\r\n                Update Product\r\n              </Link>\r\n            </li>\r\n            {/* <li>\r\n              <Link style={{ textDecoration: 'none' }} to=\"/viewOrderPage\">\r\n                View Orders\r\n              </Link>\r\n            </li> */}\r\n          </>\r\n        )}\r\n\r\n        {usertype === 'customer' && (\r\n          <>\r\n            {/* <li>\r\n              <Link style={{ textDecoration: 'none' }} to=\"/viewOrderPage\">\r\n                View Orders\r\n              </Link>\r\n            </li> */}\r\n          </>\r\n        )}\r\n\r\n        {usertype === 'manager' && (\r\n        <>\r\n            <li>\r\n                <Link style={{ textDecoration: 'none' }} to=\"/login\">\r\n                    Create Customer Account\r\n                </Link>\r\n            </li>\r\n            <li>\r\n              <Link style={{ textDecoration: 'none' }} to=\"/addorder\">\r\n                Add Order\r\n              </Link>\r\n            </li>\r\n            <li>\r\n              <Link style={{ textDecoration: 'none' }} to=\"/deleteorder\">\r\n                Delete Order\r\n              </Link>\r\n            </li>\r\n            <li>\r\n              <Link style={{ textDecoration: 'none' }} to=\"/updateorder\">\r\n                Update Order\r\n              </Link>\r\n            </li>\r\n            {/* <li>\r\n              <Link style={{ textDecoration: 'none' }} to=\"/viewOrderPage\">\r\n                View Orders\r\n              </Link>\r\n            </li> */}\r\n        </>\r\n          \r\n          \r\n        )}\r\n        <li>\r\n              <Link style={{ textDecoration: 'none' }} to=\"/viewOrderPage\">\r\n                View Orders\r\n              </Link>\r\n        </li>\r\n        <li>\r\n        <div className=\"nav-greeting\">\r\n            {username && <p>Hello, {username}!</p>}\r\n        </div>\r\n        </li>\r\n      </ul>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    loginDetails: state.loginDetails, // Get loginDetails from the Redux store\r\n    totalCartItems: getTotalCartItems(state.cart),\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps)(NavBarGeneric);","C:\\CS 584 EWA\\Assignment 5 React with Database\\frontend\\src\\Components\\LeftNavigation\\LeftNavigation.js",[],[],"C:\\CS 584 EWA\\Assignment 5 React with Database\\frontend\\src\\Reducer\\index.js",[],[],"C:\\CS 584 EWA\\Assignment 5 React with Database\\frontend\\src\\Reducer\\loginReducer.js",[],[],"C:\\CS 584 EWA\\Assignment 5 React with Database\\frontend\\src\\Reducer\\authReducer.js",[],[],"C:\\CS 584 EWA\\Assignment 5 React with Database\\frontend\\src\\Reducer\\registerReducer.js",[],[],"C:\\CS 584 EWA\\Assignment 5 React with Database\\frontend\\src\\Pages\\CartRow.js",["231"],[],"import React, { useContext } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { CartTypes, findItem } from '../Reducer/cartReducer';\r\nimport { ShopContext } from '../Context/ShopContext';\r\nimport { useDispatch } from 'react-redux';\r\n\r\nfunction CartRow({ cartItem, items }) {\r\n  const dispatch = useDispatch();\r\n  const removeItemFromCart = () => {\r\n    dispatch({ type: CartTypes.REMOVE, id: item.id });\r\n  };\r\n  \r\n // const item = items.find((i) => i.id === cartItem.id);\r\n console.log(cartItem);\r\n const {all_product}=useContext(ShopContext);\r\n\r\n console.log(\"allitems\",all_product);\r\n  //const item = (all_product, id) => {all_product.find((item) => item.id === cartItem.id) };\r\n  //const item=findItem(items,cartItem.id);\r\n\r\n  function findItemById(items, id) {\r\n    for (let i = 0; i < items.length; i++) {\r\n      if (items[i].id === id) {\r\n        return items[i];\r\n      }\r\n    }\r\n    return null; // Return null if the item is not found\r\n  }\r\n  \r\n const item = findItemById(all_product,cartItem.id);\r\n  console.log(\"cartitem \",item);\r\n  if (!item) {\r\n    return (\r\n      <tr>\r\n        <td colSpan=\"4\">Item not found</td>\r\n      </tr>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <tr>\r\n      <td>{cartItem.quantity}</td>\r\n      <td>{item.name}</td>\r\n      <td>\r\n        $\r\n        {((item.salePrice ?? item.price) * cartItem.quantity).toFixed(2)}\r\n      </td>\r\n      <td>\r\n      <button\r\n          type=\"button\"\r\n          onClick={removeItemFromCart}\r\n        >\r\n          X\r\n        </button>\r\n      </td>\r\n    </tr>\r\n  );\r\n}\r\n\r\nCartRow.propTypes = {\r\n  cartItem: PropTypes.shape({\r\n    id: PropTypes.string.isRequired,\r\n    quantity: PropTypes.number.isRequired,\r\n  }).isRequired,\r\n  items: PropTypes.arrayOf(PropTypes.shape({\r\n    id: PropTypes.string.isRequired,\r\n    title: PropTypes.string.isRequired,\r\n    salePrice: PropTypes.number,\r\n    price: PropTypes.number.isRequired,\r\n  })).isRequired,\r\n};\r\n\r\nexport default CartRow;\r\n\r\n\r\n\r\n// import React from 'react'\r\n\r\n// const CartRow = () => {\r\n//   return (\r\n//     <div>CartRow</div>\r\n//   )\r\n// }\r\n\r\n// export default CartRow\r\n\r\n\r\n// import React from 'react';\r\n// import PropTypes from 'prop-types';\r\n// import { CartTypes } from '../Reducer/cartReducer';\r\n\r\n// function CartRow({ cartItem, dispatch, items }) {\r\n//   const item = items.find((i) => i.id === cartItem.id);\r\n\r\n//   if (!items || !items.length) {\r\n//     // Handle the case when items are empty or undefined\r\n//     return null;\r\n//   }\r\n\r\n//   //const item = items.find((i) => i.itemId === cartItem.itemId);\r\n\r\n//   if (!item) {\r\n//     // Handle the case where the item is not found\r\n//     return (\r\n//       <tr>\r\n//         <td colSpan=\"4\">Item not found</td>\r\n//       </tr>\r\n//     );\r\n//   }\r\n\r\n//   const removeItemFromCart = () => {\r\n//     dispatch({ type: CartTypes.REMOVE, id: item.id });\r\n//   };\r\n\r\n//   return (\r\n//     <tr>\r\n//       <td>{cartItem.quantity}</td>\r\n//       <td>{item.title}</td>\r\n//       <td>\r\n//         $\r\n//         {((item.salePrice ?? item.price) * cartItem.quantity).toFixed(2)}\r\n//       </td>\r\n//       <td>\r\n//         <button\r\n//           type=\"button\"\r\n//           onClick={removeItemFromCart}\r\n//         >\r\n//           Remove\r\n//         </button>\r\n//       </td>\r\n//     </tr>\r\n//   );\r\n// }\r\n\r\n// CartRow.propTypes = {\r\n//   cartItem: PropTypes.shape({\r\n//     id: PropTypes.string.isRequired,\r\n//     quantity: PropTypes.number.isRequired,\r\n//   }).isRequired,\r\n//   dispatch: PropTypes.func.isRequired,\r\n//   items: PropTypes.arrayOf(PropTypes.shape({\r\n//     id: PropTypes.string.isRequired,\r\n//     title: PropTypes.string.isRequired,\r\n//     salePrice: PropTypes.number,\r\n//     price: PropTypes.number.isRequired,\r\n//   })).isRequired,\r\n// };\r\n\r\n// export default CartRow;\r\n","C:\\CS 584 EWA\\Assignment 5 React with Database\\frontend\\src\\Reducer\\cartReducer.js",[],[],"C:\\CS 584 EWA\\Assignment 5 React with Database\\frontend\\src\\Reducer\\orderReducer.js",[],[],"C:\\CS 584 EWA\\Assignment 5 React with Database\\frontend\\src\\Components\\Hero\\Hero.js",[],[],"C:\\CS 584 EWA\\Assignment 5 React with Database\\frontend\\src\\Components\\Popular\\Popular.js",[],[],"C:\\CS 584 EWA\\Assignment 5 React with Database\\frontend\\src\\Components\\Item\\Item.js",["232"],[],"import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport './Item.css';\r\nimport { CartTypes } from '../../Reducer/cartReducer';\r\nimport { useDispatch } from 'react-redux';\r\nimport { useNavigate  } from 'react-router-dom';\r\n\r\n\r\nconst Item = (props) => {\r\n  const dispatch = useDispatch();\r\n  const navigate  = useNavigate ();\r\n\r\n\r\n  const handleAddToCart = () => {\r\n    dispatch({ type: CartTypes.ADD, id: props.id });\r\n    console.log(props.id);\r\n    navigate('/cart'); \r\n\r\n  };\r\n\r\n  const handleAddToReview = () => {\r\n    console.log(\"venu\");\r\n    // dispatch({ type: CartTypes.ADD, id: props.id });\r\n    // console.log(props.id);\r\n    console.log(\"item props\",props);\r\n\r\n    const propsToSend = {\r\n      // Define the props you want to send\r\n      // For example:\r\n      productId: props.id,\r\n      productName: props.name,\r\n    };\r\n    navigate(`/writeReview?productId=${props.id}&productName=${props.name}&productPrice=${props.price}&productManufacturer=${props.manufacturer}&productCondition=${props.condition}&productCategory=${props.category}&productDiscount=${props.discount}&productWarranty=${props.warranty}&productRebates=${props.rebate}`); \r\n\r\n  };\r\n\r\n    \r\n  const handleViewReview = () => {\r\n    console.log(\"venu\");\r\n    // dispatch({ type: CartTypes.ADD, id: props.id });\r\n    // console.log(props.id);\r\n    console.log(\"item props\",props);\r\n\r\n    navigate(`/productReviews?productId=${props.id}`); \r\n\r\n  };\r\n\r\n  return (\r\n    <div className='item'>\r\n      <img src={props.image} alt=\"\" />\r\n      <p>{props.name}</p>\r\n      <div className=\"item-prices\">\r\n        <div className=\"item-price\">\r\n          ${props.price}\r\n        </div>\r\n      </div>\r\n      <p>Manufacturer: {props.manufacturer}</p>\r\n      <p> Condition: {props.condition}</p>\r\n      <p> Discount: {props.discount}</p>\r\n      <p> Description: {props.description}</p>\r\n      <p> Warranty: {props.warranty}</p>\r\n      <p> Rebates: {props.rebates}</p>\r\n      <button onClick={handleAddToCart} >Buy Now</button>\r\n      <button onClick={handleAddToReview} >Write Review</button>\r\n      <button onClick={handleViewReview} >View Review</button>\r\n    </div>\r\n  );\r\n}\r\n\r\nItem.propTypes = {\r\n  id: PropTypes.string.isRequired,\r\n  name: PropTypes.string.isRequired,\r\n  image: PropTypes.string.isRequired,\r\n  price: PropTypes.number.isRequired,\r\n  manufacturer: PropTypes.string.isRequired,\r\n  condition: PropTypes.string.isRequired,\r\n  discount: PropTypes.number.isRequired,\r\n  description: PropTypes.string.isRequired,\r\n  warranty: PropTypes.string.isRequired,\r\n  rebates: PropTypes.string.isRequired,\r\n};\r\n\r\nexport default Item;\r\n","C:\\CS 584 EWA\\Assignment 5 React with Database\\frontend\\src\\Pages\\ReviewSuccess.js",[],[],"C:\\CS 584 EWA\\Assignment 5 React with Database\\frontend\\src\\Pages\\WriteReview.js",["233","234","235"],[],"C:\\CS 584 EWA\\Assignment 5 React with Database\\frontend\\src\\Pages\\ProductReviews.js",[],[],{"ruleId":"236","replacedBy":"237"},{"ruleId":"238","replacedBy":"239"},{"ruleId":"240","replacedBy":"241"},{"ruleId":"242","replacedBy":"243"},{"ruleId":"244","replacedBy":"245"},{"ruleId":"246","replacedBy":"247"},{"ruleId":"236","replacedBy":"248"},{"ruleId":"238","replacedBy":"249"},{"ruleId":"240","replacedBy":"250"},{"ruleId":"242","replacedBy":"251"},{"ruleId":"244","replacedBy":"252"},{"ruleId":"246","replacedBy":"253"},{"ruleId":"254","severity":1,"message":"255","line":3,"column":19,"nodeType":"256","messageId":"257","endLine":3,"endColumn":30},{"ruleId":"254","severity":1,"message":"258","line":10,"column":10,"nodeType":"256","messageId":"257","endLine":10,"endColumn":18},{"ruleId":"254","severity":1,"message":"259","line":11,"column":8,"nodeType":"256","messageId":"257","endLine":11,"endColumn":13},{"ruleId":"254","severity":1,"message":"260","line":12,"column":8,"nodeType":"256","messageId":"257","endLine":12,"endColumn":19},{"ruleId":"254","severity":1,"message":"261","line":5,"column":8,"nodeType":"256","messageId":"257","endLine":5,"endColumn":17},{"ruleId":"254","severity":1,"message":"262","line":8,"column":22,"nodeType":"256","messageId":"257","endLine":8,"endColumn":40},{"ruleId":"254","severity":1,"message":"263","line":19,"column":9,"nodeType":"256","messageId":"257","endLine":19,"endColumn":20},{"ruleId":"254","severity":1,"message":"264","line":70,"column":11,"nodeType":"256","messageId":"257","endLine":70,"endColumn":31},{"ruleId":"254","severity":1,"message":"265","line":3,"column":10,"nodeType":"256","messageId":"257","endLine":3,"endColumn":14},{"ruleId":"254","severity":1,"message":"266","line":1,"column":39,"nodeType":"256","messageId":"257","endLine":1,"endColumn":48},{"ruleId":"254","severity":1,"message":"267","line":7,"column":10,"nodeType":"256","messageId":"257","endLine":7,"endColumn":21},{"ruleId":"254","severity":1,"message":"268","line":7,"column":23,"nodeType":"256","messageId":"257","endLine":7,"endColumn":38},{"ruleId":"254","severity":1,"message":"269","line":9,"column":10,"nodeType":"256","messageId":"257","endLine":9,"endColumn":19},{"ruleId":"254","severity":1,"message":"270","line":23,"column":9,"nodeType":"256","messageId":"257","endLine":23,"endColumn":17},{"ruleId":"254","severity":1,"message":"271","line":24,"column":9,"nodeType":"256","messageId":"257","endLine":24,"endColumn":17},{"ruleId":"254","severity":1,"message":"272","line":49,"column":9,"nodeType":"256","messageId":"257","endLine":49,"endColumn":21},{"ruleId":"246","severity":1,"message":"273","line":87,"column":16,"nodeType":"274","messageId":"275","endLine":87,"endColumn":18,"fix":"276"},{"ruleId":"254","severity":1,"message":"277","line":6,"column":10,"nodeType":"256","messageId":"257","endLine":6,"endColumn":19},{"ruleId":"278","severity":1,"message":"279","line":14,"column":11,"nodeType":"280","endLine":14,"endColumn":14},{"ruleId":"254","severity":1,"message":"281","line":12,"column":10,"nodeType":"256","messageId":"257","endLine":12,"endColumn":14},{"ruleId":"254","severity":1,"message":"282","line":13,"column":8,"nodeType":"256","messageId":"257","endLine":13,"endColumn":15},{"ruleId":"254","severity":1,"message":"283","line":20,"column":29,"nodeType":"256","messageId":"257","endLine":20,"endColumn":45},{"ruleId":"254","severity":1,"message":"284","line":3,"column":8,"nodeType":"256","messageId":"257","endLine":3,"endColumn":12},{"ruleId":"254","severity":1,"message":"285","line":10,"column":10,"nodeType":"256","messageId":"257","endLine":10,"endColumn":14},{"ruleId":"254","severity":1,"message":"286","line":10,"column":16,"nodeType":"256","messageId":"257","endLine":10,"endColumn":23},{"ruleId":"254","severity":1,"message":"287","line":3,"column":21,"nodeType":"256","messageId":"257","endLine":3,"endColumn":29},{"ruleId":"254","severity":1,"message":"288","line":27,"column":11,"nodeType":"256","messageId":"257","endLine":27,"endColumn":22},{"ruleId":"254","severity":1,"message":"289","line":11,"column":20,"nodeType":"256","messageId":"257","endLine":11,"endColumn":29},{"ruleId":"254","severity":1,"message":"290","line":31,"column":11,"nodeType":"256","messageId":"257","endLine":31,"endColumn":20},{"ruleId":"278","severity":1,"message":"279","line":106,"column":13,"nodeType":"280","endLine":106,"endColumn":45},"dot-location",[],"new-parens",[],"no-mixed-operators",[],"no-new-object",["291"],"no-whitespace-before-property",[],"rest-spread-spacing",[],[],[],[],["291"],[],[],"no-unused-vars","'useDispatch' is defined but never used.","Identifier","unusedVar","'Provider' is defined but never used.","'store' is defined but never used.","'all_product' is defined but never used.","'PropTypes' is defined but never used.","'createLoginDetails' is defined but never used.","'all_product' is assigned a value but never used.","'matchingRegistration' is assigned a value but never used.","'Form' is defined but never used.","'useEffect' is defined but never used.","'createOrder' is defined but never used.","'generateOrderId' is defined but never used.","'CartTypes' is defined but never used.","'dispatch' is assigned a value but never used.","'navigate' is assigned a value but never used.","'orderDetails' is assigned a value but never used.","Unexpected whitespace after spread property operator.","SpreadElement","unexpectedWhitespace",{"range":"292","text":"293"},"'viewOrder' is defined but never used.","jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/jsx-eslint/eslint-plugin-jsx-a11y/blob/HEAD/docs/rules/anchor-is-valid.md","JSXOpeningElement","'type' is defined but never used.","'Product' is defined but never used.","'filteredProducts' is assigned a value but never used.","'logo' is defined but never used.","'menu' is assigned a value but never used.","'setMenu' is assigned a value but never used.","'findItem' is defined but never used.","'propsToSend' is assigned a value but never used.","'setUserId' is assigned a value but never used.","'productId' is assigned a value but never used.","no-object-constructor",[3085,3087],""]